<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>diagnostics</key>
	<array>
		<dict>
			<key>category</key>
			<string>Logic error</string>
			<key>check_name</key>
			<string>core.NullDereference</string>
			<key>description</key>
			<string>Dereference of null pointer</string>
			<key>issue_hash_content_of_line_in_context</key>
			<string>b475fbfa2efd28778bf4af11cdb5f3f4</string>
			<key>location</key>
			<dict>
				<key>col</key>
				<integer>3</integer>
				<key>file</key>
				<integer>0</integer>
				<key>line</key>
				<integer>238</integer>
			</dict>
			<key>macro_expansions</key>
			<array>
				<dict>
					<key>expansion</key>
					<string>do {static_assert (mozilla ::detail ::AssertionConditionType &lt;decltype ((!unsignedIntegerResult )==(!result ))&gt;::isValid ,"invalid assertion condition");if ((__builtin_expect (!!(!(!!((!unsignedIntegerResult )==(!result )))),0))){do {}while (false );do {}while (false );do {*((volatile int *)__null )=227;::abort ();}while (false );}}while (false )</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>3</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>227</integer>
					</dict>
					<key>name</key>
					<string>MOZ_RELEASE_ASSERT((!unsignedIntegerResult) == (!result))</string>
				</dict>
				<dict>
					<key>expansion</key>
					<string>do {static_assert (mozilla ::detail ::AssertionConditionType &lt;decltype (TypedEnum (unsignedIntegerNewResult )==newResult )&gt;::isValid ,"invalid assertion condition");if ((__builtin_expect (!!(!(!!(TypedEnum (unsignedIntegerNewResult )==newResult ))),0))){do {}while (false );do {}while (false );do {*((volatile int *)__null )=238;::abort ();}while (false );}}while (false )</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>3</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>238</integer>
					</dict>
					<key>name</key>
					<string>MOZ_RELEASE_ASSERT(TypedEnum(unsignedIntegerNewResult) == newResult)</string>
				</dict>
			</array>
			<key>path</key>
			<array>
				<dict>
					<key>edges</key>
					<array>
						<dict>
							<key>end</key>
							<array>
								<dict>
									<key>col</key>
									<integer>3</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>222</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>21</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>222</integer>
								</dict>
							</array>
							<key>start</key>
							<array>
								<dict>
									<key>col</key>
									<integer>3</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>215</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>6</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>215</integer>
								</dict>
							</array>
						</dict>
					</array>
					<key>kind</key>
					<string>control</string>
				</dict>
				<dict>
					<key>edges</key>
					<array>
						<dict>
							<key>end</key>
							<array>
								<dict>
									<key>col</key>
									<integer>3</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>227</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>20</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>227</integer>
								</dict>
							</array>
							<key>start</key>
							<array>
								<dict>
									<key>col</key>
									<integer>3</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>222</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>21</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>222</integer>
								</dict>
							</array>
						</dict>
					</array>
					<key>kind</key>
					<string>control</string>
				</dict>
				<dict>
					<key>edges</key>
					<array>
						<dict>
							<key>end</key>
							<array>
								<dict>
									<key>col</key>
									<integer>3</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>234</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>11</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>234</integer>
								</dict>
							</array>
							<key>start</key>
							<array>
								<dict>
									<key>col</key>
									<integer>3</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>227</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>20</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>227</integer>
								</dict>
							</array>
						</dict>
					</array>
					<key>kind</key>
					<string>control</string>
				</dict>
				<dict>
					<key>edges</key>
					<array>
						<dict>
							<key>end</key>
							<array>
								<dict>
									<key>col</key>
									<integer>3</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>237</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>10</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>237</integer>
								</dict>
							</array>
							<key>start</key>
							<array>
								<dict>
									<key>col</key>
									<integer>3</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>234</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>11</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>234</integer>
								</dict>
							</array>
						</dict>
					</array>
					<key>kind</key>
					<string>control</string>
				</dict>
				<dict>
					<key>edges</key>
					<array>
						<dict>
							<key>end</key>
							<array>
								<dict>
									<key>col</key>
									<integer>3</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>238</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>20</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>238</integer>
								</dict>
							</array>
							<key>start</key>
							<array>
								<dict>
									<key>col</key>
									<integer>3</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>237</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>10</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>237</integer>
								</dict>
							</array>
						</dict>
					</array>
					<key>kind</key>
					<string>control</string>
				</dict>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>3</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>227</integer>
					</dict>
					<key>message</key>
					<string>Assuming 'unsignedIntegerResult' is 0</string>
					<key>ranges</key>
					<array>
						<array>
							<dict>
								<key>col</key>
								<integer>3</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>227</integer>
							</dict>
							<dict>
								<key>col</key>
								<integer>59</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>227</integer>
							</dict>
						</array>
					</array>
				</dict>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>3</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>238</integer>
					</dict>
					<key>message</key>
					<string>Assuming 'unsignedIntegerNewResult' is not equal to 'newResult'</string>
					<key>ranges</key>
					<array>
						<array>
							<dict>
								<key>col</key>
								<integer>3</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>238</integer>
							</dict>
							<dict>
								<key>col</key>
								<integer>70</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>238</integer>
							</dict>
						</array>
					</array>
				</dict>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>3</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>238</integer>
					</dict>
					<key>message</key>
					<string>Dereference of null pointer</string>
					<key>ranges</key>
					<array>
						<array>
							<dict>
								<key>col</key>
								<integer>3</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>238</integer>
							</dict>
							<dict>
								<key>col</key>
								<integer>70</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>238</integer>
							</dict>
						</array>
					</array>
				</dict>
			</array>
		</dict>
		<dict>
			<key>category</key>
			<string>Logic error</string>
			<key>check_name</key>
			<string>core.NullDereference</string>
			<key>description</key>
			<string>Dereference of null pointer</string>
			<key>issue_hash_content_of_line_in_context</key>
			<string>011c83d0af2409a2fd2278911cfc4c4c</string>
			<key>location</key>
			<dict>
				<key>col</key>
				<integer>3</integer>
				<key>file</key>
				<integer>0</integer>
				<key>line</key>
				<integer>246</integer>
			</dict>
			<key>macro_expansions</key>
			<array>
				<dict>
					<key>expansion</key>
					<string>do {static_assert (mozilla ::detail ::AssertionConditionType &lt;decltype ((!unsignedIntegerResult )==(!result ))&gt;::isValid ,"invalid assertion condition");if ((__builtin_expect (!!(!(!!((!unsignedIntegerResult )==(!result )))),0))){do {}while (false );do {}while (false );do {*((volatile int *)__null )=227;::abort ();}while (false );}}while (false )</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>3</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>227</integer>
					</dict>
					<key>name</key>
					<string>MOZ_RELEASE_ASSERT((!unsignedIntegerResult) == (!result))</string>
				</dict>
				<dict>
					<key>expansion</key>
					<string>do {static_assert (mozilla ::detail ::AssertionConditionType &lt;decltype ((!!unsignedIntegerResult )==(!!result ))&gt;::isValid ,"invalid assertion condition");if ((__builtin_expect (!!(!(!!((!!unsignedIntegerResult )==(!!result )))),0))){do {}while (false );do {}while (false );do {*((volatile int *)__null )=228;::abort ();}while (false );}}while (false )</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>3</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>228</integer>
					</dict>
					<key>name</key>
					<string>MOZ_RELEASE_ASSERT((!!unsignedIntegerResult) == (!!result))</string>
				</dict>
				<dict>
					<key>expansion</key>
					<string>do {static_assert (mozilla ::detail ::AssertionConditionType &lt;decltype ((result &amp;&amp;true )==bool (result ))&gt;::isValid ,"invalid assertion condition");if ((__builtin_expect (!!(!(!!((result &amp;&amp;true )==bool (result )))),0))){do {}while (false );do {}while (false );do {*((volatile int *)__null )=246;::abort ();}while (false );}}while (false )</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>3</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>246</integer>
					</dict>
					<key>name</key>
					<string>MOZ_RELEASE_ASSERT((result &amp;&amp; true) == bool(result))</string>
				</dict>
			</array>
			<key>path</key>
			<array>
				<dict>
					<key>edges</key>
					<array>
						<dict>
							<key>end</key>
							<array>
								<dict>
									<key>col</key>
									<integer>3</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>222</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>21</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>222</integer>
								</dict>
							</array>
							<key>start</key>
							<array>
								<dict>
									<key>col</key>
									<integer>3</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>215</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>6</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>215</integer>
								</dict>
							</array>
						</dict>
					</array>
					<key>kind</key>
					<string>control</string>
				</dict>
				<dict>
					<key>edges</key>
					<array>
						<dict>
							<key>end</key>
							<array>
								<dict>
									<key>col</key>
									<integer>3</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>227</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>20</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>227</integer>
								</dict>
							</array>
							<key>start</key>
							<array>
								<dict>
									<key>col</key>
									<integer>3</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>222</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>21</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>222</integer>
								</dict>
							</array>
						</dict>
					</array>
					<key>kind</key>
					<string>control</string>
				</dict>
				<dict>
					<key>edges</key>
					<array>
						<dict>
							<key>end</key>
							<array>
								<dict>
									<key>col</key>
									<integer>3</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>234</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>11</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>234</integer>
								</dict>
							</array>
							<key>start</key>
							<array>
								<dict>
									<key>col</key>
									<integer>3</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>227</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>20</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>227</integer>
								</dict>
							</array>
						</dict>
					</array>
					<key>kind</key>
					<string>control</string>
				</dict>
				<dict>
					<key>edges</key>
					<array>
						<dict>
							<key>end</key>
							<array>
								<dict>
									<key>col</key>
									<integer>3</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>237</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>10</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>237</integer>
								</dict>
							</array>
							<key>start</key>
							<array>
								<dict>
									<key>col</key>
									<integer>3</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>234</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>11</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>234</integer>
								</dict>
							</array>
						</dict>
					</array>
					<key>kind</key>
					<string>control</string>
				</dict>
				<dict>
					<key>edges</key>
					<array>
						<dict>
							<key>end</key>
							<array>
								<dict>
									<key>col</key>
									<integer>3</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>246</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>20</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>246</integer>
								</dict>
							</array>
							<key>start</key>
							<array>
								<dict>
									<key>col</key>
									<integer>3</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>237</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>10</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>237</integer>
								</dict>
							</array>
						</dict>
					</array>
					<key>kind</key>
					<string>control</string>
				</dict>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>3</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>227</integer>
					</dict>
					<key>message</key>
					<string>Assuming 'unsignedIntegerResult' is not equal to 0</string>
					<key>ranges</key>
					<array>
						<array>
							<dict>
								<key>col</key>
								<integer>3</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>227</integer>
							</dict>
							<dict>
								<key>col</key>
								<integer>59</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>227</integer>
							</dict>
						</array>
					</array>
				</dict>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>3</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>246</integer>
					</dict>
					<key>message</key>
					<string>Assuming the condition is false</string>
					<key>ranges</key>
					<array>
						<array>
							<dict>
								<key>col</key>
								<integer>3</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>246</integer>
							</dict>
							<dict>
								<key>col</key>
								<integer>54</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>246</integer>
							</dict>
						</array>
					</array>
				</dict>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>3</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>246</integer>
					</dict>
					<key>message</key>
					<string>Dereference of null pointer</string>
					<key>ranges</key>
					<array>
						<array>
							<dict>
								<key>col</key>
								<integer>3</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>246</integer>
							</dict>
							<dict>
								<key>col</key>
								<integer>54</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>246</integer>
							</dict>
						</array>
					</array>
				</dict>
			</array>
		</dict>
		<dict>
			<key>category</key>
			<string>Logic error</string>
			<key>check_name</key>
			<string>core.NullDereference</string>
			<key>description</key>
			<string>Dereference of null pointer</string>
			<key>issue_hash_content_of_line_in_context</key>
			<string>cb03083e1ca074cc52f7aafb9a6df853</string>
			<key>location</key>
			<dict>
				<key>col</key>
				<integer>5</integer>
				<key>file</key>
				<integer>0</integer>
				<key>line</key>
				<integer>259</integer>
			</dict>
			<key>macro_expansions</key>
			<array>
				<dict>
					<key>expansion</key>
					<string>do {static_assert (mozilla ::detail ::AssertionConditionType &lt;decltype (false )&gt;::isValid ,"invalid assertion condition");if ((__builtin_expect (!!(!(!!(false ))),0))){do {}while (false );do {}while (false );do {*((volatile int *)__null )=259;::abort ();}while (false );}}while (false )</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>5</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>259</integer>
					</dict>
					<key>name</key>
					<string>MOZ_RELEASE_ASSERT(false)</string>
				</dict>
			</array>
			<key>path</key>
			<array>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>5</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>259</integer>
					</dict>
					<key>message</key>
					<string>Dereference of null pointer</string>
					<key>ranges</key>
					<array>
						<array>
							<dict>
								<key>col</key>
								<integer>5</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>259</integer>
							</dict>
							<dict>
								<key>col</key>
								<integer>29</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>259</integer>
							</dict>
						</array>
					</array>
				</dict>
			</array>
		</dict>
		<dict>
			<key>category</key>
			<string>Logic error</string>
			<key>check_name</key>
			<string>alpha.core.Conversion</string>
			<key>description</key>
			<string>Loss of sign in implicit conversion</string>
			<key>issue_hash_content_of_line_in_context</key>
			<string>5f2d0d8aa0ef62da8c30a4cf2ae27967</string>
			<key>location</key>
			<dict>
				<key>col</key>
				<integer>47</integer>
				<key>file</key>
				<integer>0</integer>
				<key>line</key>
				<integer>284</integer>
			</dict>
			<key>path</key>
			<array>
				<dict>
					<key>edges</key>
					<array>
						<dict>
							<key>end</key>
							<array>
								<dict>
									<key>col</key>
									<integer>3</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>364</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>40</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>364</integer>
								</dict>
							</array>
							<key>start</key>
							<array>
								<dict>
									<key>col</key>
									<integer>3</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>362</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>21</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>362</integer>
								</dict>
							</array>
						</dict>
					</array>
					<key>kind</key>
					<string>control</string>
				</dict>
				<dict>
					<key>edges</key>
					<array>
						<dict>
							<key>end</key>
							<array>
								<dict>
									<key>col</key>
									<integer>1</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>306</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>4</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>306</integer>
								</dict>
							</array>
							<key>start</key>
							<array>
								<dict>
									<key>col</key>
									<integer>3</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>364</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>40</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>364</integer>
								</dict>
							</array>
						</dict>
					</array>
					<key>kind</key>
					<string>control</string>
				</dict>
				<dict>
					<key>edges</key>
					<array>
						<dict>
							<key>end</key>
							<array>
								<dict>
									<key>col</key>
									<integer>3</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>314</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>7</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>314</integer>
								</dict>
							</array>
							<key>start</key>
							<array>
								<dict>
									<key>col</key>
									<integer>1</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>306</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>4</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>306</integer>
								</dict>
							</array>
						</dict>
					</array>
					<key>kind</key>
					<string>control</string>
				</dict>
				<dict>
					<key>edges</key>
					<array>
						<dict>
							<key>end</key>
							<array>
								<dict>
									<key>col</key>
									<integer>3</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>338</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>28</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>338</integer>
								</dict>
							</array>
							<key>start</key>
							<array>
								<dict>
									<key>col</key>
									<integer>3</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>314</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>7</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>314</integer>
								</dict>
							</array>
						</dict>
					</array>
					<key>kind</key>
					<string>control</string>
				</dict>
				<dict>
					<key>edges</key>
					<array>
						<dict>
							<key>end</key>
							<array>
								<dict>
									<key>col</key>
									<integer>1</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>296</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>4</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>296</integer>
								</dict>
							</array>
							<key>start</key>
							<array>
								<dict>
									<key>col</key>
									<integer>3</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>338</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>28</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>338</integer>
								</dict>
							</array>
						</dict>
					</array>
					<key>kind</key>
					<string>control</string>
				</dict>
				<dict>
					<key>edges</key>
					<array>
						<dict>
							<key>end</key>
							<array>
								<dict>
									<key>col</key>
									<integer>3</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>297</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>11</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>297</integer>
								</dict>
							</array>
							<key>start</key>
							<array>
								<dict>
									<key>col</key>
									<integer>1</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>296</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>4</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>296</integer>
								</dict>
							</array>
						</dict>
					</array>
					<key>kind</key>
					<string>control</string>
				</dict>
				<dict>
					<key>edges</key>
					<array>
						<dict>
							<key>end</key>
							<array>
								<dict>
									<key>col</key>
									<integer>3</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>300</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>11</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>300</integer>
								</dict>
							</array>
							<key>start</key>
							<array>
								<dict>
									<key>col</key>
									<integer>3</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>297</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>11</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>297</integer>
								</dict>
							</array>
						</dict>
					</array>
					<key>kind</key>
					<string>control</string>
				</dict>
				<dict>
					<key>edges</key>
					<array>
						<dict>
							<key>end</key>
							<array>
								<dict>
									<key>col</key>
									<integer>1</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>273</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>4</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>273</integer>
								</dict>
							</array>
							<key>start</key>
							<array>
								<dict>
									<key>col</key>
									<integer>3</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>300</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>11</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>300</integer>
								</dict>
							</array>
						</dict>
					</array>
					<key>kind</key>
					<string>control</string>
				</dict>
				<dict>
					<key>edges</key>
					<array>
						<dict>
							<key>end</key>
							<array>
								<dict>
									<key>col</key>
									<integer>3</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>277</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>6</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>277</integer>
								</dict>
							</array>
							<key>start</key>
							<array>
								<dict>
									<key>col</key>
									<integer>1</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>273</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>4</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>273</integer>
								</dict>
							</array>
						</dict>
					</array>
					<key>kind</key>
					<string>control</string>
				</dict>
				<dict>
					<key>edges</key>
					<array>
						<dict>
							<key>end</key>
							<array>
								<dict>
									<key>col</key>
									<integer>3</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>284</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>21</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>284</integer>
								</dict>
							</array>
							<key>start</key>
							<array>
								<dict>
									<key>col</key>
									<integer>3</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>277</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>6</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>277</integer>
								</dict>
							</array>
						</dict>
					</array>
					<key>kind</key>
					<string>control</string>
				</dict>
				<dict>
					<key>edges</key>
					<array>
						<dict>
							<key>end</key>
							<array>
								<dict>
									<key>col</key>
									<integer>47</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>284</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>47</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>284</integer>
								</dict>
							</array>
							<key>start</key>
							<array>
								<dict>
									<key>col</key>
									<integer>3</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>284</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>21</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>284</integer>
								</dict>
							</array>
						</dict>
					</array>
					<key>kind</key>
					<string>control</string>
				</dict>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>3</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>364</integer>
					</dict>
					<key>message</key>
					<string>Calling 'TestAllOpsForOperandsBuiltUsingGivenOp&lt;BitFieldFor_unsigned_short, '|'&gt;'</string>
					<key>ranges</key>
					<array>
						<array>
							<dict>
								<key>col</key>
								<integer>3</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>364</integer>
							</dict>
							<dict>
								<key>col</key>
								<integer>58</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>364</integer>
							</dict>
						</array>
					</array>
				</dict>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>1</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>306</integer>
					</dict>
					<key>message</key>
					<string>Entered call from 'TestTypedEnumBitField&lt;BitFieldFor_unsigned_short&gt;'</string>
					<key>ranges</key>
					<array>
						<array>
							<dict>
								<key>col</key>
								<integer>1</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>306</integer>
							</dict>
							<dict>
								<key>col</key>
								<integer>1</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>306</integer>
							</dict>
						</array>
					</array>
				</dict>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>3</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>338</integer>
					</dict>
					<key>message</key>
					<string>Calling 'TestAllOpsForGivenOperands&lt;BitFieldFor_unsigned_short, BitFieldFor_unsigned_short, BitFieldFor_unsigned_short, BitFieldFor_unsigned_short&gt;'</string>
					<key>ranges</key>
					<array>
						<array>
							<dict>
								<key>col</key>
								<integer>3</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>338</integer>
							</dict>
							<dict>
								<key>col</key>
								<integer>66</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>338</integer>
							</dict>
						</array>
					</array>
				</dict>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>1</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>296</integer>
					</dict>
					<key>message</key>
					<string>Entered call from 'TestAllOpsForOperandsBuiltUsingGivenOp&lt;BitFieldFor_unsigned_short, '|'&gt;'</string>
					<key>ranges</key>
					<array>
						<array>
							<dict>
								<key>col</key>
								<integer>1</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>296</integer>
							</dict>
							<dict>
								<key>col</key>
								<integer>1</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>296</integer>
							</dict>
						</array>
					</array>
				</dict>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>3</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>300</integer>
					</dict>
					<key>message</key>
					<string>Calling 'TestTilde&lt;BitFieldFor_unsigned_short, BitFieldFor_unsigned_short&gt;'</string>
					<key>ranges</key>
					<array>
						<array>
							<dict>
								<key>col</key>
								<integer>3</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>300</integer>
							</dict>
							<dict>
								<key>col</key>
								<integer>27</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>300</integer>
							</dict>
						</array>
					</array>
				</dict>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>1</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>273</integer>
					</dict>
					<key>message</key>
					<string>Entered call from 'TestAllOpsForGivenOperands&lt;BitFieldFor_unsigned_short, BitFieldFor_unsigned_short, BitFieldFor_unsigned_short, BitFieldFor_unsigned_short&gt;'</string>
					<key>ranges</key>
					<array>
						<array>
							<dict>
								<key>col</key>
								<integer>1</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>273</integer>
							</dict>
							<dict>
								<key>col</key>
								<integer>1</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>273</integer>
							</dict>
						</array>
					</array>
				</dict>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>47</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>284</integer>
					</dict>
					<key>message</key>
					<string>Loss of sign in implicit conversion</string>
					<key>ranges</key>
					<array>
						<array>
							<dict>
								<key>col</key>
								<integer>47</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>284</integer>
							</dict>
							<dict>
								<key>col</key>
								<integer>72</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>284</integer>
							</dict>
						</array>
					</array>
				</dict>
			</array>
		</dict>
		<dict>
			<key>category</key>
			<string>Logic error</string>
			<key>check_name</key>
			<string>alpha.cplusplus.EnumCastOutOfRange</string>
			<key>description</key>
			<string>The value provided to the cast expression is not in the valid range of values for the enum</string>
			<key>issue_hash_content_of_line_in_context</key>
			<string>48a7bf5ca3620f2644da1d7f2b475e34</string>
			<key>location</key>
			<dict>
				<key>col</key>
				<integer>3</integer>
				<key>file</key>
				<integer>0</integer>
				<key>line</key>
				<integer>287</integer>
			</dict>
			<key>macro_expansions</key>
			<array>
				<dict>
					<key>expansion</key>
					<string>do {static_assert (mozilla ::detail ::AssertionConditionType &lt;decltype (TypedEnum (unsignedIntegerResult )==TypedEnum (result ))&gt;::isValid ,"invalid assertion condition");if ((__builtin_expect (!!(!(!!(TypedEnum (unsignedIntegerResult )==TypedEnum (result )))),0))){do {}while (false );do {}while (false );do {*((volatile int *)__null )=287;::abort ();}while (false );}}while (false )</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>3</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>287</integer>
					</dict>
					<key>name</key>
					<string>MOZ_RELEASE_ASSERT(TypedEnum(unsignedIntegerResult) == TypedEnum(result))</string>
				</dict>
			</array>
			<key>path</key>
			<array>
				<dict>
					<key>edges</key>
					<array>
						<dict>
							<key>end</key>
							<array>
								<dict>
									<key>col</key>
									<integer>3</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>364</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>40</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>364</integer>
								</dict>
							</array>
							<key>start</key>
							<array>
								<dict>
									<key>col</key>
									<integer>3</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>362</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>21</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>362</integer>
								</dict>
							</array>
						</dict>
					</array>
					<key>kind</key>
					<string>control</string>
				</dict>
				<dict>
					<key>edges</key>
					<array>
						<dict>
							<key>end</key>
							<array>
								<dict>
									<key>col</key>
									<integer>1</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>306</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>4</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>306</integer>
								</dict>
							</array>
							<key>start</key>
							<array>
								<dict>
									<key>col</key>
									<integer>3</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>364</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>40</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>364</integer>
								</dict>
							</array>
						</dict>
					</array>
					<key>kind</key>
					<string>control</string>
				</dict>
				<dict>
					<key>edges</key>
					<array>
						<dict>
							<key>end</key>
							<array>
								<dict>
									<key>col</key>
									<integer>3</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>314</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>7</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>314</integer>
								</dict>
							</array>
							<key>start</key>
							<array>
								<dict>
									<key>col</key>
									<integer>1</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>306</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>4</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>306</integer>
								</dict>
							</array>
						</dict>
					</array>
					<key>kind</key>
					<string>control</string>
				</dict>
				<dict>
					<key>edges</key>
					<array>
						<dict>
							<key>end</key>
							<array>
								<dict>
									<key>col</key>
									<integer>3</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>338</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>28</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>338</integer>
								</dict>
							</array>
							<key>start</key>
							<array>
								<dict>
									<key>col</key>
									<integer>3</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>314</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>7</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>314</integer>
								</dict>
							</array>
						</dict>
					</array>
					<key>kind</key>
					<string>control</string>
				</dict>
				<dict>
					<key>edges</key>
					<array>
						<dict>
							<key>end</key>
							<array>
								<dict>
									<key>col</key>
									<integer>1</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>296</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>4</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>296</integer>
								</dict>
							</array>
							<key>start</key>
							<array>
								<dict>
									<key>col</key>
									<integer>3</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>338</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>28</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>338</integer>
								</dict>
							</array>
						</dict>
					</array>
					<key>kind</key>
					<string>control</string>
				</dict>
				<dict>
					<key>edges</key>
					<array>
						<dict>
							<key>end</key>
							<array>
								<dict>
									<key>col</key>
									<integer>3</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>297</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>11</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>297</integer>
								</dict>
							</array>
							<key>start</key>
							<array>
								<dict>
									<key>col</key>
									<integer>1</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>296</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>4</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>296</integer>
								</dict>
							</array>
						</dict>
					</array>
					<key>kind</key>
					<string>control</string>
				</dict>
				<dict>
					<key>edges</key>
					<array>
						<dict>
							<key>end</key>
							<array>
								<dict>
									<key>col</key>
									<integer>3</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>300</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>11</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>300</integer>
								</dict>
							</array>
							<key>start</key>
							<array>
								<dict>
									<key>col</key>
									<integer>3</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>297</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>11</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>297</integer>
								</dict>
							</array>
						</dict>
					</array>
					<key>kind</key>
					<string>control</string>
				</dict>
				<dict>
					<key>edges</key>
					<array>
						<dict>
							<key>end</key>
							<array>
								<dict>
									<key>col</key>
									<integer>1</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>273</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>4</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>273</integer>
								</dict>
							</array>
							<key>start</key>
							<array>
								<dict>
									<key>col</key>
									<integer>3</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>300</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>11</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>300</integer>
								</dict>
							</array>
						</dict>
					</array>
					<key>kind</key>
					<string>control</string>
				</dict>
				<dict>
					<key>edges</key>
					<array>
						<dict>
							<key>end</key>
							<array>
								<dict>
									<key>col</key>
									<integer>3</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>277</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>6</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>277</integer>
								</dict>
							</array>
							<key>start</key>
							<array>
								<dict>
									<key>col</key>
									<integer>1</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>273</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>4</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>273</integer>
								</dict>
							</array>
						</dict>
					</array>
					<key>kind</key>
					<string>control</string>
				</dict>
				<dict>
					<key>edges</key>
					<array>
						<dict>
							<key>end</key>
							<array>
								<dict>
									<key>col</key>
									<integer>3</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>284</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>21</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>284</integer>
								</dict>
							</array>
							<key>start</key>
							<array>
								<dict>
									<key>col</key>
									<integer>3</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>277</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>6</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>277</integer>
								</dict>
							</array>
						</dict>
					</array>
					<key>kind</key>
					<string>control</string>
				</dict>
				<dict>
					<key>edges</key>
					<array>
						<dict>
							<key>end</key>
							<array>
								<dict>
									<key>col</key>
									<integer>3</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>287</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>20</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>287</integer>
								</dict>
							</array>
							<key>start</key>
							<array>
								<dict>
									<key>col</key>
									<integer>3</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>284</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>21</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>284</integer>
								</dict>
							</array>
						</dict>
					</array>
					<key>kind</key>
					<string>control</string>
				</dict>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>3</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>364</integer>
					</dict>
					<key>message</key>
					<string>Calling 'TestAllOpsForOperandsBuiltUsingGivenOp&lt;BitFieldFor_unsigned_long_long, '|'&gt;'</string>
					<key>ranges</key>
					<array>
						<array>
							<dict>
								<key>col</key>
								<integer>3</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>364</integer>
							</dict>
							<dict>
								<key>col</key>
								<integer>58</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>364</integer>
							</dict>
						</array>
					</array>
				</dict>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>1</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>306</integer>
					</dict>
					<key>message</key>
					<string>Entered call from 'TestTypedEnumBitField&lt;BitFieldFor_unsigned_long_long&gt;'</string>
					<key>ranges</key>
					<array>
						<array>
							<dict>
								<key>col</key>
								<integer>1</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>306</integer>
							</dict>
							<dict>
								<key>col</key>
								<integer>1</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>306</integer>
							</dict>
						</array>
					</array>
				</dict>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>3</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>338</integer>
					</dict>
					<key>message</key>
					<string>Calling 'TestAllOpsForGivenOperands&lt;BitFieldFor_unsigned_long_long, BitFieldFor_unsigned_long_long, BitFieldFor_unsigned_long_long, BitFieldFor_unsigned_long_long&gt;'</string>
					<key>ranges</key>
					<array>
						<array>
							<dict>
								<key>col</key>
								<integer>3</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>338</integer>
							</dict>
							<dict>
								<key>col</key>
								<integer>66</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>338</integer>
							</dict>
						</array>
					</array>
				</dict>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>1</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>296</integer>
					</dict>
					<key>message</key>
					<string>Entered call from 'TestAllOpsForOperandsBuiltUsingGivenOp&lt;BitFieldFor_unsigned_long_long, '|'&gt;'</string>
					<key>ranges</key>
					<array>
						<array>
							<dict>
								<key>col</key>
								<integer>1</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>296</integer>
							</dict>
							<dict>
								<key>col</key>
								<integer>1</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>296</integer>
							</dict>
						</array>
					</array>
				</dict>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>3</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>300</integer>
					</dict>
					<key>message</key>
					<string>Calling 'TestTilde&lt;BitFieldFor_unsigned_long_long, BitFieldFor_unsigned_long_long&gt;'</string>
					<key>ranges</key>
					<array>
						<array>
							<dict>
								<key>col</key>
								<integer>3</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>300</integer>
							</dict>
							<dict>
								<key>col</key>
								<integer>27</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>300</integer>
							</dict>
						</array>
					</array>
				</dict>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>1</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>273</integer>
					</dict>
					<key>message</key>
					<string>Entered call from 'TestAllOpsForGivenOperands&lt;BitFieldFor_unsigned_long_long, BitFieldFor_unsigned_long_long, BitFieldFor_unsigned_long_long, BitFieldFor_unsigned_long_long&gt;'</string>
					<key>ranges</key>
					<array>
						<array>
							<dict>
								<key>col</key>
								<integer>1</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>273</integer>
							</dict>
							<dict>
								<key>col</key>
								<integer>1</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>273</integer>
							</dict>
						</array>
					</array>
				</dict>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>3</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>287</integer>
					</dict>
					<key>message</key>
					<string>The value provided to the cast expression is not in the valid range of values for the enum</string>
					<key>ranges</key>
					<array>
						<array>
							<dict>
								<key>col</key>
								<integer>3</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>287</integer>
							</dict>
							<dict>
								<key>col</key>
								<integer>75</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>287</integer>
							</dict>
						</array>
					</array>
				</dict>
			</array>
		</dict>
		<dict>
			<key>category</key>
			<string>Code clone</string>
			<key>check_name</key>
			<string>alpha.clone.CloneChecker</string>
			<key>description</key>
			<string>Duplicate code detected</string>
			<key>issue_hash_content_of_line_in_context</key>
			<string>04102a7d10f4f545aca3693a3b817928</string>
			<key>location</key>
			<dict>
				<key>col</key>
				<integer>3</integer>
				<key>file</key>
				<integer>0</integer>
				<key>line</key>
				<integer>338</integer>
			</dict>
			<key>notes</key>
			<array>
				<dict>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>3</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>338</integer>
					</dict>
					<key>message</key>
					<string>Similar code here</string>
					<key>ranges</key>
					<array>
						<array>
							<dict>
								<key>col</key>
								<integer>3</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>338</integer>
							</dict>
							<dict>
								<key>col</key>
								<integer>65</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>356</integer>
							</dict>
						</array>
					</array>
				</dict>
				<dict>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>3</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>338</integer>
					</dict>
					<key>message</key>
					<string>Similar code here</string>
					<key>ranges</key>
					<array>
						<array>
							<dict>
								<key>col</key>
								<integer>3</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>338</integer>
							</dict>
							<dict>
								<key>col</key>
								<integer>65</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>356</integer>
							</dict>
						</array>
					</array>
				</dict>
			</array>
			<key>path</key>
			<array>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>3</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>338</integer>
					</dict>
					<key>message</key>
					<string>Duplicate code detected</string>
					<key>ranges</key>
					<array>
						<array>
							<dict>
								<key>col</key>
								<integer>3</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>338</integer>
							</dict>
							<dict>
								<key>col</key>
								<integer>65</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>356</integer>
							</dict>
						</array>
					</array>
				</dict>
			</array>
		</dict>
		<dict>
			<key>category</key>
			<string>Logic error</string>
			<key>check_name</key>
			<string>alpha.cplusplus.EnumCastOutOfRange</string>
			<key>description</key>
			<string>The value provided to the cast expression is not in the valid range of values for the enum</string>
			<key>issue_hash_content_of_line_in_context</key>
			<string>e15e2ff14e6771058547c9546fa7c530</string>
			<key>location</key>
			<dict>
				<key>col</key>
				<integer>1</integer>
				<key>file</key>
				<integer>0</integer>
				<key>line</key>
				<integer>403</integer>
			</dict>
			<key>macro_expansions</key>
			<array>
				<dict>
					<key>expansion</key>
					<string>do {static_assert (mozilla ::detail ::AssertionConditionType &lt;decltype (IntType (a ))&gt;::isValid ,"invalid assertion condition");if ((__builtin_expect (!!(!(!!(IntType (a )))),0))){do {}while (false );do {}while (false );do {*((volatile int *)__null )=441;::abort ();}while (false );}}while (false )</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>3</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>441</integer>
					</dict>
					<key>name</key>
					<string>MOZ_RELEASE_ASSERT(IntType(a))</string>
				</dict>
				<dict>
					<key>expansion</key>
					<string>do {static_assert (mozilla ::detail ::AssertionConditionType &lt;decltype (IntType (b ))&gt;::isValid ,"invalid assertion condition");if ((__builtin_expect (!!(!(!!(IntType (b )))),0))){do {}while (false );do {}while (false );do {*((volatile int *)__null )=442;::abort ();}while (false );}}while (false )</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>3</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>442</integer>
					</dict>
					<key>name</key>
					<string>MOZ_RELEASE_ASSERT(IntType(b))</string>
				</dict>
				<dict>
					<key>expansion</key>
					<string>do {static_assert (mozilla ::detail ::AssertionConditionType &lt;decltype (a |EnumType ::B )&gt;::isValid ,"invalid assertion condition");if ((__builtin_expect (!!(!(!!(a |EnumType ::B ))),0))){do {}while (false );do {}while (false );do {*((volatile int *)__null )=443;::abort ();}while (false );}}while (false )</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>3</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>443</integer>
					</dict>
					<key>name</key>
					<string>MOZ_RELEASE_ASSERT(a | EnumType::B)</string>
				</dict>
				<dict>
					<key>expansion</key>
					<string>inline constexpr mozilla ::CastableTypedEnumResult &lt;Int8EnumWithHighBits &gt;operator |(Int8EnumWithHighBits a ,Int8EnumWithHighBits b ){typedef mozilla ::CastableTypedEnumResult &lt;Int8EnumWithHighBits &gt;Result ;typedef mozilla ::detail ::UnsignedIntegerTypeForEnum &lt;Int8EnumWithHighBits &gt;::Type U ;return Result (Int8EnumWithHighBits (U (a )|U (b )));}inline Int8EnumWithHighBits &amp;operator |=(Int8EnumWithHighBits &amp;a ,Int8EnumWithHighBits b ){return a =a |b ;}inline constexpr mozilla ::CastableTypedEnumResult &lt;Int8EnumWithHighBits &gt;operator &amp;(Int8EnumWithHighBits a ,Int8EnumWithHighBits b ){typedef mozilla ::CastableTypedEnumResult &lt;Int8EnumWithHighBits &gt;Result ;typedef mozilla ::detail ::UnsignedIntegerTypeForEnum &lt;Int8EnumWithHighBits &gt;::Type U ;return Result (Int8EnumWithHighBits (U (a )&amp;U (b )));}inline Int8EnumWithHighBits &amp;operator &amp;=(Int8EnumWithHighBits &amp;a ,Int8EnumWithHighBits b ){return a =a &amp;b ;}inline constexpr mozilla ::CastableTypedEnumResult &lt;Int8EnumWithHighBits &gt;operator ^(Int8EnumWithHighBits a ,Int8EnumWithHighBits b ){typedef mozilla ::CastableTypedEnumResult &lt;Int8EnumWithHighBits &gt;Result ;typedef mozilla ::detail ::UnsignedIntegerTypeForEnum &lt;Int8EnumWithHighBits &gt;::Type U ;return Result (Int8EnumWithHighBits (U (a )^U (b )));}inline Int8EnumWithHighBits &amp;operator ^=(Int8EnumWithHighBits &amp;a ,Int8EnumWithHighBits b ){return a =a ^b ;}inline constexpr mozilla ::CastableTypedEnumResult &lt;Int8EnumWithHighBits &gt;operator ~(Int8EnumWithHighBits a ){typedef mozilla ::CastableTypedEnumResult &lt;Int8EnumWithHighBits &gt;Result ;typedef mozilla ::detail ::UnsignedIntegerTypeForEnum &lt;Int8EnumWithHighBits &gt;::Type U ;return Result (Int8EnumWithHighBits (~(U (a ))));}</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>1</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>403</integer>
					</dict>
					<key>name</key>
					<string>MOZ_MAKE_ENUM_CLASS_BITWISE_OPERATORS(Int8EnumWithHighBits)</string>
				</dict>
			</array>
			<key>path</key>
			<array>
				<dict>
					<key>edges</key>
					<array>
						<dict>
							<key>end</key>
							<array>
								<dict>
									<key>col</key>
									<integer>3</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>440</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>10</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>440</integer>
								</dict>
							</array>
							<key>start</key>
							<array>
								<dict>
									<key>col</key>
									<integer>3</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>439</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>10</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>439</integer>
								</dict>
							</array>
						</dict>
					</array>
					<key>kind</key>
					<string>control</string>
				</dict>
				<dict>
					<key>edges</key>
					<array>
						<dict>
							<key>end</key>
							<array>
								<dict>
									<key>col</key>
									<integer>3</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>441</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>20</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>441</integer>
								</dict>
							</array>
							<key>start</key>
							<array>
								<dict>
									<key>col</key>
									<integer>3</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>440</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>10</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>440</integer>
								</dict>
							</array>
						</dict>
					</array>
					<key>kind</key>
					<string>control</string>
				</dict>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>3</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>443</integer>
					</dict>
					<key>message</key>
					<string>Calling 'operator|'</string>
					<key>ranges</key>
					<array>
						<array>
							<dict>
								<key>col</key>
								<integer>3</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>443</integer>
							</dict>
							<dict>
								<key>col</key>
								<integer>37</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>443</integer>
							</dict>
						</array>
					</array>
				</dict>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>1</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>403</integer>
					</dict>
					<key>message</key>
					<string>Entered call from 'TestIsNotTruncated&lt;Int8EnumWithHighBits, signed char&gt;'</string>
					<key>ranges</key>
					<array>
						<array>
							<dict>
								<key>col</key>
								<integer>1</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>403</integer>
							</dict>
							<dict>
								<key>col</key>
								<integer>1</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>403</integer>
							</dict>
						</array>
					</array>
				</dict>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>1</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>403</integer>
					</dict>
					<key>message</key>
					<string>The value provided to the cast expression is not in the valid range of values for the enum</string>
					<key>ranges</key>
					<array>
						<array>
							<dict>
								<key>col</key>
								<integer>1</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>403</integer>
							</dict>
							<dict>
								<key>col</key>
								<integer>59</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>403</integer>
							</dict>
						</array>
					</array>
				</dict>
			</array>
		</dict>
		<dict>
			<key>category</key>
			<string>Logic error</string>
			<key>check_name</key>
			<string>alpha.cplusplus.EnumCastOutOfRange</string>
			<key>description</key>
			<string>The value provided to the cast expression is not in the valid range of values for the enum</string>
			<key>issue_hash_content_of_line_in_context</key>
			<string>ce866c3f2fa2c88ec882f94cfb2731bc</string>
			<key>location</key>
			<dict>
				<key>col</key>
				<integer>1</integer>
				<key>file</key>
				<integer>0</integer>
				<key>line</key>
				<integer>403</integer>
			</dict>
			<key>macro_expansions</key>
			<array>
				<dict>
					<key>expansion</key>
					<string>do {static_assert (mozilla ::detail ::AssertionConditionType &lt;decltype (IntType (a ))&gt;::isValid ,"invalid assertion condition");if ((__builtin_expect (!!(!(!!(IntType (a )))),0))){do {}while (false );do {}while (false );do {*((volatile int *)__null )=441;::abort ();}while (false );}}while (false )</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>3</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>441</integer>
					</dict>
					<key>name</key>
					<string>MOZ_RELEASE_ASSERT(IntType(a))</string>
				</dict>
				<dict>
					<key>expansion</key>
					<string>do {static_assert (mozilla ::detail ::AssertionConditionType &lt;decltype (IntType (b ))&gt;::isValid ,"invalid assertion condition");if ((__builtin_expect (!!(!(!!(IntType (b )))),0))){do {}while (false );do {}while (false );do {*((volatile int *)__null )=442;::abort ();}while (false );}}while (false )</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>3</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>442</integer>
					</dict>
					<key>name</key>
					<string>MOZ_RELEASE_ASSERT(IntType(b))</string>
				</dict>
				<dict>
					<key>expansion</key>
					<string>do {static_assert (mozilla ::detail ::AssertionConditionType &lt;decltype (a |EnumType ::B )&gt;::isValid ,"invalid assertion condition");if ((__builtin_expect (!!(!(!!(a |EnumType ::B ))),0))){do {}while (false );do {}while (false );do {*((volatile int *)__null )=443;::abort ();}while (false );}}while (false )</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>3</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>443</integer>
					</dict>
					<key>name</key>
					<string>MOZ_RELEASE_ASSERT(a | EnumType::B)</string>
				</dict>
				<dict>
					<key>expansion</key>
					<string>do {static_assert (mozilla ::detail ::AssertionConditionType &lt;decltype (a |b )&gt;::isValid ,"invalid assertion condition");if ((__builtin_expect (!!(!(!!(a |b ))),0))){do {}while (false );do {}while (false );do {*((volatile int *)__null )=444;::abort ();}while (false );}}while (false )</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>3</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>444</integer>
					</dict>
					<key>name</key>
					<string>MOZ_RELEASE_ASSERT(a | b)</string>
				</dict>
				<dict>
					<key>expansion</key>
					<string>do {static_assert (mozilla ::detail ::AssertionConditionType &lt;decltype (EnumType ::A |EnumType ::B )&gt;::isValid ,"invalid assertion condition");if ((__builtin_expect (!!(!(!!(EnumType ::A |EnumType ::B ))),0))){do {}while (false );do {}while (false );do {*((volatile int *)__null )=445;::abort ();}while (false );}}while (false )</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>3</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>445</integer>
					</dict>
					<key>name</key>
					<string>MOZ_RELEASE_ASSERT(EnumType::A | EnumType::B)</string>
				</dict>
				<dict>
					<key>expansion</key>
					<string>do {static_assert (mozilla ::detail ::AssertionConditionType &lt;decltype (IntType (c ))&gt;::isValid ,"invalid assertion condition");if ((__builtin_expect (!!(!(!!(IntType (c )))),0))){do {}while (false );do {}while (false );do {*((volatile int *)__null )=447;::abort ();}while (false );}}while (false )</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>3</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>447</integer>
					</dict>
					<key>name</key>
					<string>MOZ_RELEASE_ASSERT(IntType(c))</string>
				</dict>
				<dict>
					<key>expansion</key>
					<string>do {static_assert (mozilla ::detail ::AssertionConditionType &lt;decltype (c &amp;c )&gt;::isValid ,"invalid assertion condition");if ((__builtin_expect (!!(!(!!(c &amp;c ))),0))){do {}while (false );do {}while (false );do {*((volatile int *)__null )=448;::abort ();}while (false );}}while (false )</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>3</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>448</integer>
					</dict>
					<key>name</key>
					<string>MOZ_RELEASE_ASSERT(c &amp; c)</string>
				</dict>
				<dict>
					<key>expansion</key>
					<string>inline constexpr mozilla ::CastableTypedEnumResult &lt;Int8EnumWithHighBits &gt;operator |(Int8EnumWithHighBits a ,Int8EnumWithHighBits b ){typedef mozilla ::CastableTypedEnumResult &lt;Int8EnumWithHighBits &gt;Result ;typedef mozilla ::detail ::UnsignedIntegerTypeForEnum &lt;Int8EnumWithHighBits &gt;::Type U ;return Result (Int8EnumWithHighBits (U (a )|U (b )));}inline Int8EnumWithHighBits &amp;operator |=(Int8EnumWithHighBits &amp;a ,Int8EnumWithHighBits b ){return a =a |b ;}inline constexpr mozilla ::CastableTypedEnumResult &lt;Int8EnumWithHighBits &gt;operator &amp;(Int8EnumWithHighBits a ,Int8EnumWithHighBits b ){typedef mozilla ::CastableTypedEnumResult &lt;Int8EnumWithHighBits &gt;Result ;typedef mozilla ::detail ::UnsignedIntegerTypeForEnum &lt;Int8EnumWithHighBits &gt;::Type U ;return Result (Int8EnumWithHighBits (U (a )&amp;U (b )));}inline Int8EnumWithHighBits &amp;operator &amp;=(Int8EnumWithHighBits &amp;a ,Int8EnumWithHighBits b ){return a =a &amp;b ;}inline constexpr mozilla ::CastableTypedEnumResult &lt;Int8EnumWithHighBits &gt;operator ^(Int8EnumWithHighBits a ,Int8EnumWithHighBits b ){typedef mozilla ::CastableTypedEnumResult &lt;Int8EnumWithHighBits &gt;Result ;typedef mozilla ::detail ::UnsignedIntegerTypeForEnum &lt;Int8EnumWithHighBits &gt;::Type U ;return Result (Int8EnumWithHighBits (U (a )^U (b )));}inline Int8EnumWithHighBits &amp;operator ^=(Int8EnumWithHighBits &amp;a ,Int8EnumWithHighBits b ){return a =a ^b ;}inline constexpr mozilla ::CastableTypedEnumResult &lt;Int8EnumWithHighBits &gt;operator ~(Int8EnumWithHighBits a ){typedef mozilla ::CastableTypedEnumResult &lt;Int8EnumWithHighBits &gt;Result ;typedef mozilla ::detail ::UnsignedIntegerTypeForEnum &lt;Int8EnumWithHighBits &gt;::Type U ;return Result (Int8EnumWithHighBits (~(U (a ))));}</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>1</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>403</integer>
					</dict>
					<key>name</key>
					<string>MOZ_MAKE_ENUM_CLASS_BITWISE_OPERATORS(Int8EnumWithHighBits)</string>
				</dict>
			</array>
			<key>path</key>
			<array>
				<dict>
					<key>edges</key>
					<array>
						<dict>
							<key>end</key>
							<array>
								<dict>
									<key>col</key>
									<integer>3</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>440</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>10</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>440</integer>
								</dict>
							</array>
							<key>start</key>
							<array>
								<dict>
									<key>col</key>
									<integer>3</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>439</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>10</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>439</integer>
								</dict>
							</array>
						</dict>
					</array>
					<key>kind</key>
					<string>control</string>
				</dict>
				<dict>
					<key>edges</key>
					<array>
						<dict>
							<key>end</key>
							<array>
								<dict>
									<key>col</key>
									<integer>3</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>441</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>20</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>441</integer>
								</dict>
							</array>
							<key>start</key>
							<array>
								<dict>
									<key>col</key>
									<integer>3</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>440</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>10</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>440</integer>
								</dict>
							</array>
						</dict>
					</array>
					<key>kind</key>
					<string>control</string>
				</dict>
				<dict>
					<key>edges</key>
					<array>
						<dict>
							<key>end</key>
							<array>
								<dict>
									<key>col</key>
									<integer>3</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>446</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>10</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>446</integer>
								</dict>
							</array>
							<key>start</key>
							<array>
								<dict>
									<key>col</key>
									<integer>3</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>441</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>20</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>441</integer>
								</dict>
							</array>
						</dict>
					</array>
					<key>kind</key>
					<string>control</string>
				</dict>
				<dict>
					<key>edges</key>
					<array>
						<dict>
							<key>end</key>
							<array>
								<dict>
									<key>col</key>
									<integer>3</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>447</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>20</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>447</integer>
								</dict>
							</array>
							<key>start</key>
							<array>
								<dict>
									<key>col</key>
									<integer>3</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>446</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>10</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>446</integer>
								</dict>
							</array>
						</dict>
					</array>
					<key>kind</key>
					<string>control</string>
				</dict>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>3</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>448</integer>
					</dict>
					<key>message</key>
					<string>Calling 'operator&amp;'</string>
					<key>ranges</key>
					<array>
						<array>
							<dict>
								<key>col</key>
								<integer>3</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>448</integer>
							</dict>
							<dict>
								<key>col</key>
								<integer>27</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>448</integer>
							</dict>
						</array>
					</array>
				</dict>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>1</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>403</integer>
					</dict>
					<key>message</key>
					<string>Entered call from 'TestIsNotTruncated&lt;Int8EnumWithHighBits, signed char&gt;'</string>
					<key>ranges</key>
					<array>
						<array>
							<dict>
								<key>col</key>
								<integer>1</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>403</integer>
							</dict>
							<dict>
								<key>col</key>
								<integer>1</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>403</integer>
							</dict>
						</array>
					</array>
				</dict>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>1</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>403</integer>
					</dict>
					<key>message</key>
					<string>The value provided to the cast expression is not in the valid range of values for the enum</string>
					<key>ranges</key>
					<array>
						<array>
							<dict>
								<key>col</key>
								<integer>1</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>403</integer>
							</dict>
							<dict>
								<key>col</key>
								<integer>59</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>403</integer>
							</dict>
						</array>
					</array>
				</dict>
			</array>
		</dict>
		<dict>
			<key>category</key>
			<string>Logic error</string>
			<key>check_name</key>
			<string>alpha.cplusplus.EnumCastOutOfRange</string>
			<key>description</key>
			<string>The value provided to the cast expression is not in the valid range of values for the enum</string>
			<key>issue_hash_content_of_line_in_context</key>
			<string>9efe8243846ff3255a1fcbcee6f6f222</string>
			<key>location</key>
			<dict>
				<key>col</key>
				<integer>1</integer>
				<key>file</key>
				<integer>0</integer>
				<key>line</key>
				<integer>406</integer>
			</dict>
			<key>macro_expansions</key>
			<array>
				<dict>
					<key>expansion</key>
					<string>do {static_assert (mozilla ::detail ::AssertionConditionType &lt;decltype (IntType (a ))&gt;::isValid ,"invalid assertion condition");if ((__builtin_expect (!!(!(!!(IntType (a )))),0))){do {}while (false );do {}while (false );do {*((volatile int *)__null )=441;::abort ();}while (false );}}while (false )</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>3</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>441</integer>
					</dict>
					<key>name</key>
					<string>MOZ_RELEASE_ASSERT(IntType(a))</string>
				</dict>
				<dict>
					<key>expansion</key>
					<string>do {static_assert (mozilla ::detail ::AssertionConditionType &lt;decltype (IntType (b ))&gt;::isValid ,"invalid assertion condition");if ((__builtin_expect (!!(!(!!(IntType (b )))),0))){do {}while (false );do {}while (false );do {*((volatile int *)__null )=442;::abort ();}while (false );}}while (false )</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>3</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>442</integer>
					</dict>
					<key>name</key>
					<string>MOZ_RELEASE_ASSERT(IntType(b))</string>
				</dict>
				<dict>
					<key>expansion</key>
					<string>do {static_assert (mozilla ::detail ::AssertionConditionType &lt;decltype (a |EnumType ::B )&gt;::isValid ,"invalid assertion condition");if ((__builtin_expect (!!(!(!!(a |EnumType ::B ))),0))){do {}while (false );do {}while (false );do {*((volatile int *)__null )=443;::abort ();}while (false );}}while (false )</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>3</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>443</integer>
					</dict>
					<key>name</key>
					<string>MOZ_RELEASE_ASSERT(a | EnumType::B)</string>
				</dict>
				<dict>
					<key>expansion</key>
					<string>inline constexpr mozilla ::CastableTypedEnumResult &lt;Uint8EnumWithHighBits &gt;operator |(Uint8EnumWithHighBits a ,Uint8EnumWithHighBits b ){typedef mozilla ::CastableTypedEnumResult &lt;Uint8EnumWithHighBits &gt;Result ;typedef mozilla ::detail ::UnsignedIntegerTypeForEnum &lt;Uint8EnumWithHighBits &gt;::Type U ;return Result (Uint8EnumWithHighBits (U (a )|U (b )));}inline Uint8EnumWithHighBits &amp;operator |=(Uint8EnumWithHighBits &amp;a ,Uint8EnumWithHighBits b ){return a =a |b ;}inline constexpr mozilla ::CastableTypedEnumResult &lt;Uint8EnumWithHighBits &gt;operator &amp;(Uint8EnumWithHighBits a ,Uint8EnumWithHighBits b ){typedef mozilla ::CastableTypedEnumResult &lt;Uint8EnumWithHighBits &gt;Result ;typedef mozilla ::detail ::UnsignedIntegerTypeForEnum &lt;Uint8EnumWithHighBits &gt;::Type U ;return Result (Uint8EnumWithHighBits (U (a )&amp;U (b )));}inline Uint8EnumWithHighBits &amp;operator &amp;=(Uint8EnumWithHighBits &amp;a ,Uint8EnumWithHighBits b ){return a =a &amp;b ;}inline constexpr mozilla ::CastableTypedEnumResult &lt;Uint8EnumWithHighBits &gt;operator ^(Uint8EnumWithHighBits a ,Uint8EnumWithHighBits b ){typedef mozilla ::CastableTypedEnumResult &lt;Uint8EnumWithHighBits &gt;Result ;typedef mozilla ::detail ::UnsignedIntegerTypeForEnum &lt;Uint8EnumWithHighBits &gt;::Type U ;return Result (Uint8EnumWithHighBits (U (a )^U (b )));}inline Uint8EnumWithHighBits &amp;operator ^=(Uint8EnumWithHighBits &amp;a ,Uint8EnumWithHighBits b ){return a =a ^b ;}inline constexpr mozilla ::CastableTypedEnumResult &lt;Uint8EnumWithHighBits &gt;operator ~(Uint8EnumWithHighBits a ){typedef mozilla ::CastableTypedEnumResult &lt;Uint8EnumWithHighBits &gt;Result ;typedef mozilla ::detail ::UnsignedIntegerTypeForEnum &lt;Uint8EnumWithHighBits &gt;::Type U ;return Result (Uint8EnumWithHighBits (~(U (a ))));}</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>1</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>406</integer>
					</dict>
					<key>name</key>
					<string>MOZ_MAKE_ENUM_CLASS_BITWISE_OPERATORS(Uint8EnumWithHighBits)</string>
				</dict>
			</array>
			<key>path</key>
			<array>
				<dict>
					<key>edges</key>
					<array>
						<dict>
							<key>end</key>
							<array>
								<dict>
									<key>col</key>
									<integer>3</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>440</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>10</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>440</integer>
								</dict>
							</array>
							<key>start</key>
							<array>
								<dict>
									<key>col</key>
									<integer>3</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>439</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>10</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>439</integer>
								</dict>
							</array>
						</dict>
					</array>
					<key>kind</key>
					<string>control</string>
				</dict>
				<dict>
					<key>edges</key>
					<array>
						<dict>
							<key>end</key>
							<array>
								<dict>
									<key>col</key>
									<integer>3</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>441</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>20</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>441</integer>
								</dict>
							</array>
							<key>start</key>
							<array>
								<dict>
									<key>col</key>
									<integer>3</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>440</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>10</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>440</integer>
								</dict>
							</array>
						</dict>
					</array>
					<key>kind</key>
					<string>control</string>
				</dict>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>3</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>443</integer>
					</dict>
					<key>message</key>
					<string>Calling 'operator|'</string>
					<key>ranges</key>
					<array>
						<array>
							<dict>
								<key>col</key>
								<integer>3</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>443</integer>
							</dict>
							<dict>
								<key>col</key>
								<integer>37</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>443</integer>
							</dict>
						</array>
					</array>
				</dict>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>1</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>406</integer>
					</dict>
					<key>message</key>
					<string>Entered call from 'TestIsNotTruncated&lt;Uint8EnumWithHighBits, unsigned char&gt;'</string>
					<key>ranges</key>
					<array>
						<array>
							<dict>
								<key>col</key>
								<integer>1</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>406</integer>
							</dict>
							<dict>
								<key>col</key>
								<integer>1</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>406</integer>
							</dict>
						</array>
					</array>
				</dict>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>1</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>406</integer>
					</dict>
					<key>message</key>
					<string>The value provided to the cast expression is not in the valid range of values for the enum</string>
					<key>ranges</key>
					<array>
						<array>
							<dict>
								<key>col</key>
								<integer>1</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>406</integer>
							</dict>
							<dict>
								<key>col</key>
								<integer>60</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>406</integer>
							</dict>
						</array>
					</array>
				</dict>
			</array>
		</dict>
		<dict>
			<key>category</key>
			<string>Logic error</string>
			<key>check_name</key>
			<string>alpha.cplusplus.EnumCastOutOfRange</string>
			<key>description</key>
			<string>The value provided to the cast expression is not in the valid range of values for the enum</string>
			<key>issue_hash_content_of_line_in_context</key>
			<string>53059c05a0be59333cf2e168f1e9d18e</string>
			<key>location</key>
			<dict>
				<key>col</key>
				<integer>1</integer>
				<key>file</key>
				<integer>0</integer>
				<key>line</key>
				<integer>406</integer>
			</dict>
			<key>macro_expansions</key>
			<array>
				<dict>
					<key>expansion</key>
					<string>do {static_assert (mozilla ::detail ::AssertionConditionType &lt;decltype (IntType (a ))&gt;::isValid ,"invalid assertion condition");if ((__builtin_expect (!!(!(!!(IntType (a )))),0))){do {}while (false );do {}while (false );do {*((volatile int *)__null )=441;::abort ();}while (false );}}while (false )</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>3</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>441</integer>
					</dict>
					<key>name</key>
					<string>MOZ_RELEASE_ASSERT(IntType(a))</string>
				</dict>
				<dict>
					<key>expansion</key>
					<string>do {static_assert (mozilla ::detail ::AssertionConditionType &lt;decltype (IntType (b ))&gt;::isValid ,"invalid assertion condition");if ((__builtin_expect (!!(!(!!(IntType (b )))),0))){do {}while (false );do {}while (false );do {*((volatile int *)__null )=442;::abort ();}while (false );}}while (false )</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>3</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>442</integer>
					</dict>
					<key>name</key>
					<string>MOZ_RELEASE_ASSERT(IntType(b))</string>
				</dict>
				<dict>
					<key>expansion</key>
					<string>do {static_assert (mozilla ::detail ::AssertionConditionType &lt;decltype (a |EnumType ::B )&gt;::isValid ,"invalid assertion condition");if ((__builtin_expect (!!(!(!!(a |EnumType ::B ))),0))){do {}while (false );do {}while (false );do {*((volatile int *)__null )=443;::abort ();}while (false );}}while (false )</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>3</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>443</integer>
					</dict>
					<key>name</key>
					<string>MOZ_RELEASE_ASSERT(a | EnumType::B)</string>
				</dict>
				<dict>
					<key>expansion</key>
					<string>do {static_assert (mozilla ::detail ::AssertionConditionType &lt;decltype (a |b )&gt;::isValid ,"invalid assertion condition");if ((__builtin_expect (!!(!(!!(a |b ))),0))){do {}while (false );do {}while (false );do {*((volatile int *)__null )=444;::abort ();}while (false );}}while (false )</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>3</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>444</integer>
					</dict>
					<key>name</key>
					<string>MOZ_RELEASE_ASSERT(a | b)</string>
				</dict>
				<dict>
					<key>expansion</key>
					<string>do {static_assert (mozilla ::detail ::AssertionConditionType &lt;decltype (EnumType ::A |EnumType ::B )&gt;::isValid ,"invalid assertion condition");if ((__builtin_expect (!!(!(!!(EnumType ::A |EnumType ::B ))),0))){do {}while (false );do {}while (false );do {*((volatile int *)__null )=445;::abort ();}while (false );}}while (false )</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>3</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>445</integer>
					</dict>
					<key>name</key>
					<string>MOZ_RELEASE_ASSERT(EnumType::A | EnumType::B)</string>
				</dict>
				<dict>
					<key>expansion</key>
					<string>do {static_assert (mozilla ::detail ::AssertionConditionType &lt;decltype (IntType (c ))&gt;::isValid ,"invalid assertion condition");if ((__builtin_expect (!!(!(!!(IntType (c )))),0))){do {}while (false );do {}while (false );do {*((volatile int *)__null )=447;::abort ();}while (false );}}while (false )</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>3</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>447</integer>
					</dict>
					<key>name</key>
					<string>MOZ_RELEASE_ASSERT(IntType(c))</string>
				</dict>
				<dict>
					<key>expansion</key>
					<string>do {static_assert (mozilla ::detail ::AssertionConditionType &lt;decltype (c &amp;c )&gt;::isValid ,"invalid assertion condition");if ((__builtin_expect (!!(!(!!(c &amp;c ))),0))){do {}while (false );do {}while (false );do {*((volatile int *)__null )=448;::abort ();}while (false );}}while (false )</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>3</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>448</integer>
					</dict>
					<key>name</key>
					<string>MOZ_RELEASE_ASSERT(c &amp; c)</string>
				</dict>
				<dict>
					<key>expansion</key>
					<string>inline constexpr mozilla ::CastableTypedEnumResult &lt;Uint8EnumWithHighBits &gt;operator |(Uint8EnumWithHighBits a ,Uint8EnumWithHighBits b ){typedef mozilla ::CastableTypedEnumResult &lt;Uint8EnumWithHighBits &gt;Result ;typedef mozilla ::detail ::UnsignedIntegerTypeForEnum &lt;Uint8EnumWithHighBits &gt;::Type U ;return Result (Uint8EnumWithHighBits (U (a )|U (b )));}inline Uint8EnumWithHighBits &amp;operator |=(Uint8EnumWithHighBits &amp;a ,Uint8EnumWithHighBits b ){return a =a |b ;}inline constexpr mozilla ::CastableTypedEnumResult &lt;Uint8EnumWithHighBits &gt;operator &amp;(Uint8EnumWithHighBits a ,Uint8EnumWithHighBits b ){typedef mozilla ::CastableTypedEnumResult &lt;Uint8EnumWithHighBits &gt;Result ;typedef mozilla ::detail ::UnsignedIntegerTypeForEnum &lt;Uint8EnumWithHighBits &gt;::Type U ;return Result (Uint8EnumWithHighBits (U (a )&amp;U (b )));}inline Uint8EnumWithHighBits &amp;operator &amp;=(Uint8EnumWithHighBits &amp;a ,Uint8EnumWithHighBits b ){return a =a &amp;b ;}inline constexpr mozilla ::CastableTypedEnumResult &lt;Uint8EnumWithHighBits &gt;operator ^(Uint8EnumWithHighBits a ,Uint8EnumWithHighBits b ){typedef mozilla ::CastableTypedEnumResult &lt;Uint8EnumWithHighBits &gt;Result ;typedef mozilla ::detail ::UnsignedIntegerTypeForEnum &lt;Uint8EnumWithHighBits &gt;::Type U ;return Result (Uint8EnumWithHighBits (U (a )^U (b )));}inline Uint8EnumWithHighBits &amp;operator ^=(Uint8EnumWithHighBits &amp;a ,Uint8EnumWithHighBits b ){return a =a ^b ;}inline constexpr mozilla ::CastableTypedEnumResult &lt;Uint8EnumWithHighBits &gt;operator ~(Uint8EnumWithHighBits a ){typedef mozilla ::CastableTypedEnumResult &lt;Uint8EnumWithHighBits &gt;Result ;typedef mozilla ::detail ::UnsignedIntegerTypeForEnum &lt;Uint8EnumWithHighBits &gt;::Type U ;return Result (Uint8EnumWithHighBits (~(U (a ))));}</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>1</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>406</integer>
					</dict>
					<key>name</key>
					<string>MOZ_MAKE_ENUM_CLASS_BITWISE_OPERATORS(Uint8EnumWithHighBits)</string>
				</dict>
			</array>
			<key>path</key>
			<array>
				<dict>
					<key>edges</key>
					<array>
						<dict>
							<key>end</key>
							<array>
								<dict>
									<key>col</key>
									<integer>3</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>440</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>10</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>440</integer>
								</dict>
							</array>
							<key>start</key>
							<array>
								<dict>
									<key>col</key>
									<integer>3</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>439</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>10</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>439</integer>
								</dict>
							</array>
						</dict>
					</array>
					<key>kind</key>
					<string>control</string>
				</dict>
				<dict>
					<key>edges</key>
					<array>
						<dict>
							<key>end</key>
							<array>
								<dict>
									<key>col</key>
									<integer>3</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>441</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>20</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>441</integer>
								</dict>
							</array>
							<key>start</key>
							<array>
								<dict>
									<key>col</key>
									<integer>3</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>440</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>10</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>440</integer>
								</dict>
							</array>
						</dict>
					</array>
					<key>kind</key>
					<string>control</string>
				</dict>
				<dict>
					<key>edges</key>
					<array>
						<dict>
							<key>end</key>
							<array>
								<dict>
									<key>col</key>
									<integer>3</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>446</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>10</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>446</integer>
								</dict>
							</array>
							<key>start</key>
							<array>
								<dict>
									<key>col</key>
									<integer>3</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>441</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>20</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>441</integer>
								</dict>
							</array>
						</dict>
					</array>
					<key>kind</key>
					<string>control</string>
				</dict>
				<dict>
					<key>edges</key>
					<array>
						<dict>
							<key>end</key>
							<array>
								<dict>
									<key>col</key>
									<integer>3</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>447</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>20</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>447</integer>
								</dict>
							</array>
							<key>start</key>
							<array>
								<dict>
									<key>col</key>
									<integer>3</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>446</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>10</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>446</integer>
								</dict>
							</array>
						</dict>
					</array>
					<key>kind</key>
					<string>control</string>
				</dict>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>3</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>448</integer>
					</dict>
					<key>message</key>
					<string>Calling 'operator&amp;'</string>
					<key>ranges</key>
					<array>
						<array>
							<dict>
								<key>col</key>
								<integer>3</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>448</integer>
							</dict>
							<dict>
								<key>col</key>
								<integer>27</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>448</integer>
							</dict>
						</array>
					</array>
				</dict>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>1</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>406</integer>
					</dict>
					<key>message</key>
					<string>Entered call from 'TestIsNotTruncated&lt;Uint8EnumWithHighBits, unsigned char&gt;'</string>
					<key>ranges</key>
					<array>
						<array>
							<dict>
								<key>col</key>
								<integer>1</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>406</integer>
							</dict>
							<dict>
								<key>col</key>
								<integer>1</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>406</integer>
							</dict>
						</array>
					</array>
				</dict>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>1</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>406</integer>
					</dict>
					<key>message</key>
					<string>The value provided to the cast expression is not in the valid range of values for the enum</string>
					<key>ranges</key>
					<array>
						<array>
							<dict>
								<key>col</key>
								<integer>1</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>406</integer>
							</dict>
							<dict>
								<key>col</key>
								<integer>60</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>406</integer>
							</dict>
						</array>
					</array>
				</dict>
			</array>
		</dict>
		<dict>
			<key>category</key>
			<string>Logic error</string>
			<key>check_name</key>
			<string>alpha.cplusplus.EnumCastOutOfRange</string>
			<key>description</key>
			<string>The value provided to the cast expression is not in the valid range of values for the enum</string>
			<key>issue_hash_content_of_line_in_context</key>
			<string>6ced41c0e784fddb3012e1994f399362</string>
			<key>location</key>
			<dict>
				<key>col</key>
				<integer>1</integer>
				<key>file</key>
				<integer>0</integer>
				<key>line</key>
				<integer>409</integer>
			</dict>
			<key>macro_expansions</key>
			<array>
				<dict>
					<key>expansion</key>
					<string>do {static_assert (mozilla ::detail ::AssertionConditionType &lt;decltype (IntType (a ))&gt;::isValid ,"invalid assertion condition");if ((__builtin_expect (!!(!(!!(IntType (a )))),0))){do {}while (false );do {}while (false );do {*((volatile int *)__null )=441;::abort ();}while (false );}}while (false )</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>3</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>441</integer>
					</dict>
					<key>name</key>
					<string>MOZ_RELEASE_ASSERT(IntType(a))</string>
				</dict>
				<dict>
					<key>expansion</key>
					<string>do {static_assert (mozilla ::detail ::AssertionConditionType &lt;decltype (IntType (b ))&gt;::isValid ,"invalid assertion condition");if ((__builtin_expect (!!(!(!!(IntType (b )))),0))){do {}while (false );do {}while (false );do {*((volatile int *)__null )=442;::abort ();}while (false );}}while (false )</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>3</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>442</integer>
					</dict>
					<key>name</key>
					<string>MOZ_RELEASE_ASSERT(IntType(b))</string>
				</dict>
				<dict>
					<key>expansion</key>
					<string>do {static_assert (mozilla ::detail ::AssertionConditionType &lt;decltype (a |EnumType ::B )&gt;::isValid ,"invalid assertion condition");if ((__builtin_expect (!!(!(!!(a |EnumType ::B ))),0))){do {}while (false );do {}while (false );do {*((volatile int *)__null )=443;::abort ();}while (false );}}while (false )</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>3</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>443</integer>
					</dict>
					<key>name</key>
					<string>MOZ_RELEASE_ASSERT(a | EnumType::B)</string>
				</dict>
				<dict>
					<key>expansion</key>
					<string>inline constexpr mozilla ::CastableTypedEnumResult &lt;Int16EnumWithHighBits &gt;operator |(Int16EnumWithHighBits a ,Int16EnumWithHighBits b ){typedef mozilla ::CastableTypedEnumResult &lt;Int16EnumWithHighBits &gt;Result ;typedef mozilla ::detail ::UnsignedIntegerTypeForEnum &lt;Int16EnumWithHighBits &gt;::Type U ;return Result (Int16EnumWithHighBits (U (a )|U (b )));}inline Int16EnumWithHighBits &amp;operator |=(Int16EnumWithHighBits &amp;a ,Int16EnumWithHighBits b ){return a =a |b ;}inline constexpr mozilla ::CastableTypedEnumResult &lt;Int16EnumWithHighBits &gt;operator &amp;(Int16EnumWithHighBits a ,Int16EnumWithHighBits b ){typedef mozilla ::CastableTypedEnumResult &lt;Int16EnumWithHighBits &gt;Result ;typedef mozilla ::detail ::UnsignedIntegerTypeForEnum &lt;Int16EnumWithHighBits &gt;::Type U ;return Result (Int16EnumWithHighBits (U (a )&amp;U (b )));}inline Int16EnumWithHighBits &amp;operator &amp;=(Int16EnumWithHighBits &amp;a ,Int16EnumWithHighBits b ){return a =a &amp;b ;}inline constexpr mozilla ::CastableTypedEnumResult &lt;Int16EnumWithHighBits &gt;operator ^(Int16EnumWithHighBits a ,Int16EnumWithHighBits b ){typedef mozilla ::CastableTypedEnumResult &lt;Int16EnumWithHighBits &gt;Result ;typedef mozilla ::detail ::UnsignedIntegerTypeForEnum &lt;Int16EnumWithHighBits &gt;::Type U ;return Result (Int16EnumWithHighBits (U (a )^U (b )));}inline Int16EnumWithHighBits &amp;operator ^=(Int16EnumWithHighBits &amp;a ,Int16EnumWithHighBits b ){return a =a ^b ;}inline constexpr mozilla ::CastableTypedEnumResult &lt;Int16EnumWithHighBits &gt;operator ~(Int16EnumWithHighBits a ){typedef mozilla ::CastableTypedEnumResult &lt;Int16EnumWithHighBits &gt;Result ;typedef mozilla ::detail ::UnsignedIntegerTypeForEnum &lt;Int16EnumWithHighBits &gt;::Type U ;return Result (Int16EnumWithHighBits (~(U (a ))));}</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>1</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>409</integer>
					</dict>
					<key>name</key>
					<string>MOZ_MAKE_ENUM_CLASS_BITWISE_OPERATORS(Int16EnumWithHighBits)</string>
				</dict>
			</array>
			<key>path</key>
			<array>
				<dict>
					<key>edges</key>
					<array>
						<dict>
							<key>end</key>
							<array>
								<dict>
									<key>col</key>
									<integer>3</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>440</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>10</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>440</integer>
								</dict>
							</array>
							<key>start</key>
							<array>
								<dict>
									<key>col</key>
									<integer>3</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>439</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>10</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>439</integer>
								</dict>
							</array>
						</dict>
					</array>
					<key>kind</key>
					<string>control</string>
				</dict>
				<dict>
					<key>edges</key>
					<array>
						<dict>
							<key>end</key>
							<array>
								<dict>
									<key>col</key>
									<integer>3</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>441</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>20</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>441</integer>
								</dict>
							</array>
							<key>start</key>
							<array>
								<dict>
									<key>col</key>
									<integer>3</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>440</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>10</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>440</integer>
								</dict>
							</array>
						</dict>
					</array>
					<key>kind</key>
					<string>control</string>
				</dict>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>3</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>443</integer>
					</dict>
					<key>message</key>
					<string>Calling 'operator|'</string>
					<key>ranges</key>
					<array>
						<array>
							<dict>
								<key>col</key>
								<integer>3</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>443</integer>
							</dict>
							<dict>
								<key>col</key>
								<integer>37</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>443</integer>
							</dict>
						</array>
					</array>
				</dict>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>1</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>409</integer>
					</dict>
					<key>message</key>
					<string>Entered call from 'TestIsNotTruncated&lt;Int16EnumWithHighBits, short&gt;'</string>
					<key>ranges</key>
					<array>
						<array>
							<dict>
								<key>col</key>
								<integer>1</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>409</integer>
							</dict>
							<dict>
								<key>col</key>
								<integer>1</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>409</integer>
							</dict>
						</array>
					</array>
				</dict>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>1</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>409</integer>
					</dict>
					<key>message</key>
					<string>The value provided to the cast expression is not in the valid range of values for the enum</string>
					<key>ranges</key>
					<array>
						<array>
							<dict>
								<key>col</key>
								<integer>1</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>409</integer>
							</dict>
							<dict>
								<key>col</key>
								<integer>60</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>409</integer>
							</dict>
						</array>
					</array>
				</dict>
			</array>
		</dict>
		<dict>
			<key>category</key>
			<string>Logic error</string>
			<key>check_name</key>
			<string>alpha.cplusplus.EnumCastOutOfRange</string>
			<key>description</key>
			<string>The value provided to the cast expression is not in the valid range of values for the enum</string>
			<key>issue_hash_content_of_line_in_context</key>
			<string>ed79d9e982e9d4b6ec505cf2cf3bfbb2</string>
			<key>location</key>
			<dict>
				<key>col</key>
				<integer>1</integer>
				<key>file</key>
				<integer>0</integer>
				<key>line</key>
				<integer>409</integer>
			</dict>
			<key>macro_expansions</key>
			<array>
				<dict>
					<key>expansion</key>
					<string>do {static_assert (mozilla ::detail ::AssertionConditionType &lt;decltype (IntType (a ))&gt;::isValid ,"invalid assertion condition");if ((__builtin_expect (!!(!(!!(IntType (a )))),0))){do {}while (false );do {}while (false );do {*((volatile int *)__null )=441;::abort ();}while (false );}}while (false )</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>3</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>441</integer>
					</dict>
					<key>name</key>
					<string>MOZ_RELEASE_ASSERT(IntType(a))</string>
				</dict>
				<dict>
					<key>expansion</key>
					<string>do {static_assert (mozilla ::detail ::AssertionConditionType &lt;decltype (IntType (b ))&gt;::isValid ,"invalid assertion condition");if ((__builtin_expect (!!(!(!!(IntType (b )))),0))){do {}while (false );do {}while (false );do {*((volatile int *)__null )=442;::abort ();}while (false );}}while (false )</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>3</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>442</integer>
					</dict>
					<key>name</key>
					<string>MOZ_RELEASE_ASSERT(IntType(b))</string>
				</dict>
				<dict>
					<key>expansion</key>
					<string>do {static_assert (mozilla ::detail ::AssertionConditionType &lt;decltype (a |EnumType ::B )&gt;::isValid ,"invalid assertion condition");if ((__builtin_expect (!!(!(!!(a |EnumType ::B ))),0))){do {}while (false );do {}while (false );do {*((volatile int *)__null )=443;::abort ();}while (false );}}while (false )</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>3</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>443</integer>
					</dict>
					<key>name</key>
					<string>MOZ_RELEASE_ASSERT(a | EnumType::B)</string>
				</dict>
				<dict>
					<key>expansion</key>
					<string>do {static_assert (mozilla ::detail ::AssertionConditionType &lt;decltype (a |b )&gt;::isValid ,"invalid assertion condition");if ((__builtin_expect (!!(!(!!(a |b ))),0))){do {}while (false );do {}while (false );do {*((volatile int *)__null )=444;::abort ();}while (false );}}while (false )</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>3</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>444</integer>
					</dict>
					<key>name</key>
					<string>MOZ_RELEASE_ASSERT(a | b)</string>
				</dict>
				<dict>
					<key>expansion</key>
					<string>do {static_assert (mozilla ::detail ::AssertionConditionType &lt;decltype (EnumType ::A |EnumType ::B )&gt;::isValid ,"invalid assertion condition");if ((__builtin_expect (!!(!(!!(EnumType ::A |EnumType ::B ))),0))){do {}while (false );do {}while (false );do {*((volatile int *)__null )=445;::abort ();}while (false );}}while (false )</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>3</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>445</integer>
					</dict>
					<key>name</key>
					<string>MOZ_RELEASE_ASSERT(EnumType::A | EnumType::B)</string>
				</dict>
				<dict>
					<key>expansion</key>
					<string>do {static_assert (mozilla ::detail ::AssertionConditionType &lt;decltype (IntType (c ))&gt;::isValid ,"invalid assertion condition");if ((__builtin_expect (!!(!(!!(IntType (c )))),0))){do {}while (false );do {}while (false );do {*((volatile int *)__null )=447;::abort ();}while (false );}}while (false )</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>3</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>447</integer>
					</dict>
					<key>name</key>
					<string>MOZ_RELEASE_ASSERT(IntType(c))</string>
				</dict>
				<dict>
					<key>expansion</key>
					<string>do {static_assert (mozilla ::detail ::AssertionConditionType &lt;decltype (c &amp;c )&gt;::isValid ,"invalid assertion condition");if ((__builtin_expect (!!(!(!!(c &amp;c ))),0))){do {}while (false );do {}while (false );do {*((volatile int *)__null )=448;::abort ();}while (false );}}while (false )</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>3</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>448</integer>
					</dict>
					<key>name</key>
					<string>MOZ_RELEASE_ASSERT(c &amp; c)</string>
				</dict>
				<dict>
					<key>expansion</key>
					<string>inline constexpr mozilla ::CastableTypedEnumResult &lt;Int16EnumWithHighBits &gt;operator |(Int16EnumWithHighBits a ,Int16EnumWithHighBits b ){typedef mozilla ::CastableTypedEnumResult &lt;Int16EnumWithHighBits &gt;Result ;typedef mozilla ::detail ::UnsignedIntegerTypeForEnum &lt;Int16EnumWithHighBits &gt;::Type U ;return Result (Int16EnumWithHighBits (U (a )|U (b )));}inline Int16EnumWithHighBits &amp;operator |=(Int16EnumWithHighBits &amp;a ,Int16EnumWithHighBits b ){return a =a |b ;}inline constexpr mozilla ::CastableTypedEnumResult &lt;Int16EnumWithHighBits &gt;operator &amp;(Int16EnumWithHighBits a ,Int16EnumWithHighBits b ){typedef mozilla ::CastableTypedEnumResult &lt;Int16EnumWithHighBits &gt;Result ;typedef mozilla ::detail ::UnsignedIntegerTypeForEnum &lt;Int16EnumWithHighBits &gt;::Type U ;return Result (Int16EnumWithHighBits (U (a )&amp;U (b )));}inline Int16EnumWithHighBits &amp;operator &amp;=(Int16EnumWithHighBits &amp;a ,Int16EnumWithHighBits b ){return a =a &amp;b ;}inline constexpr mozilla ::CastableTypedEnumResult &lt;Int16EnumWithHighBits &gt;operator ^(Int16EnumWithHighBits a ,Int16EnumWithHighBits b ){typedef mozilla ::CastableTypedEnumResult &lt;Int16EnumWithHighBits &gt;Result ;typedef mozilla ::detail ::UnsignedIntegerTypeForEnum &lt;Int16EnumWithHighBits &gt;::Type U ;return Result (Int16EnumWithHighBits (U (a )^U (b )));}inline Int16EnumWithHighBits &amp;operator ^=(Int16EnumWithHighBits &amp;a ,Int16EnumWithHighBits b ){return a =a ^b ;}inline constexpr mozilla ::CastableTypedEnumResult &lt;Int16EnumWithHighBits &gt;operator ~(Int16EnumWithHighBits a ){typedef mozilla ::CastableTypedEnumResult &lt;Int16EnumWithHighBits &gt;Result ;typedef mozilla ::detail ::UnsignedIntegerTypeForEnum &lt;Int16EnumWithHighBits &gt;::Type U ;return Result (Int16EnumWithHighBits (~(U (a ))));}</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>1</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>409</integer>
					</dict>
					<key>name</key>
					<string>MOZ_MAKE_ENUM_CLASS_BITWISE_OPERATORS(Int16EnumWithHighBits)</string>
				</dict>
			</array>
			<key>path</key>
			<array>
				<dict>
					<key>edges</key>
					<array>
						<dict>
							<key>end</key>
							<array>
								<dict>
									<key>col</key>
									<integer>3</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>440</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>10</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>440</integer>
								</dict>
							</array>
							<key>start</key>
							<array>
								<dict>
									<key>col</key>
									<integer>3</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>439</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>10</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>439</integer>
								</dict>
							</array>
						</dict>
					</array>
					<key>kind</key>
					<string>control</string>
				</dict>
				<dict>
					<key>edges</key>
					<array>
						<dict>
							<key>end</key>
							<array>
								<dict>
									<key>col</key>
									<integer>3</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>441</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>20</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>441</integer>
								</dict>
							</array>
							<key>start</key>
							<array>
								<dict>
									<key>col</key>
									<integer>3</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>440</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>10</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>440</integer>
								</dict>
							</array>
						</dict>
					</array>
					<key>kind</key>
					<string>control</string>
				</dict>
				<dict>
					<key>edges</key>
					<array>
						<dict>
							<key>end</key>
							<array>
								<dict>
									<key>col</key>
									<integer>3</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>446</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>10</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>446</integer>
								</dict>
							</array>
							<key>start</key>
							<array>
								<dict>
									<key>col</key>
									<integer>3</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>441</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>20</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>441</integer>
								</dict>
							</array>
						</dict>
					</array>
					<key>kind</key>
					<string>control</string>
				</dict>
				<dict>
					<key>edges</key>
					<array>
						<dict>
							<key>end</key>
							<array>
								<dict>
									<key>col</key>
									<integer>3</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>447</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>20</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>447</integer>
								</dict>
							</array>
							<key>start</key>
							<array>
								<dict>
									<key>col</key>
									<integer>3</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>446</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>10</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>446</integer>
								</dict>
							</array>
						</dict>
					</array>
					<key>kind</key>
					<string>control</string>
				</dict>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>3</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>448</integer>
					</dict>
					<key>message</key>
					<string>Calling 'operator&amp;'</string>
					<key>ranges</key>
					<array>
						<array>
							<dict>
								<key>col</key>
								<integer>3</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>448</integer>
							</dict>
							<dict>
								<key>col</key>
								<integer>27</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>448</integer>
							</dict>
						</array>
					</array>
				</dict>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>1</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>409</integer>
					</dict>
					<key>message</key>
					<string>Entered call from 'TestIsNotTruncated&lt;Int16EnumWithHighBits, short&gt;'</string>
					<key>ranges</key>
					<array>
						<array>
							<dict>
								<key>col</key>
								<integer>1</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>409</integer>
							</dict>
							<dict>
								<key>col</key>
								<integer>1</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>409</integer>
							</dict>
						</array>
					</array>
				</dict>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>1</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>409</integer>
					</dict>
					<key>message</key>
					<string>The value provided to the cast expression is not in the valid range of values for the enum</string>
					<key>ranges</key>
					<array>
						<array>
							<dict>
								<key>col</key>
								<integer>1</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>409</integer>
							</dict>
							<dict>
								<key>col</key>
								<integer>60</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>409</integer>
							</dict>
						</array>
					</array>
				</dict>
			</array>
		</dict>
		<dict>
			<key>category</key>
			<string>Logic error</string>
			<key>check_name</key>
			<string>alpha.cplusplus.EnumCastOutOfRange</string>
			<key>description</key>
			<string>The value provided to the cast expression is not in the valid range of values for the enum</string>
			<key>issue_hash_content_of_line_in_context</key>
			<string>00e7a4cf65424092799676b0d6fd8108</string>
			<key>location</key>
			<dict>
				<key>col</key>
				<integer>1</integer>
				<key>file</key>
				<integer>0</integer>
				<key>line</key>
				<integer>412</integer>
			</dict>
			<key>macro_expansions</key>
			<array>
				<dict>
					<key>expansion</key>
					<string>do {static_assert (mozilla ::detail ::AssertionConditionType &lt;decltype (IntType (a ))&gt;::isValid ,"invalid assertion condition");if ((__builtin_expect (!!(!(!!(IntType (a )))),0))){do {}while (false );do {}while (false );do {*((volatile int *)__null )=441;::abort ();}while (false );}}while (false )</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>3</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>441</integer>
					</dict>
					<key>name</key>
					<string>MOZ_RELEASE_ASSERT(IntType(a))</string>
				</dict>
				<dict>
					<key>expansion</key>
					<string>do {static_assert (mozilla ::detail ::AssertionConditionType &lt;decltype (IntType (b ))&gt;::isValid ,"invalid assertion condition");if ((__builtin_expect (!!(!(!!(IntType (b )))),0))){do {}while (false );do {}while (false );do {*((volatile int *)__null )=442;::abort ();}while (false );}}while (false )</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>3</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>442</integer>
					</dict>
					<key>name</key>
					<string>MOZ_RELEASE_ASSERT(IntType(b))</string>
				</dict>
				<dict>
					<key>expansion</key>
					<string>do {static_assert (mozilla ::detail ::AssertionConditionType &lt;decltype (a |EnumType ::B )&gt;::isValid ,"invalid assertion condition");if ((__builtin_expect (!!(!(!!(a |EnumType ::B ))),0))){do {}while (false );do {}while (false );do {*((volatile int *)__null )=443;::abort ();}while (false );}}while (false )</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>3</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>443</integer>
					</dict>
					<key>name</key>
					<string>MOZ_RELEASE_ASSERT(a | EnumType::B)</string>
				</dict>
				<dict>
					<key>expansion</key>
					<string>inline constexpr mozilla ::CastableTypedEnumResult &lt;Uint16EnumWithHighBits &gt;operator |(Uint16EnumWithHighBits a ,Uint16EnumWithHighBits b ){typedef mozilla ::CastableTypedEnumResult &lt;Uint16EnumWithHighBits &gt;Result ;typedef mozilla ::detail ::UnsignedIntegerTypeForEnum &lt;Uint16EnumWithHighBits &gt;::Type U ;return Result (Uint16EnumWithHighBits (U (a )|U (b )));}inline Uint16EnumWithHighBits &amp;operator |=(Uint16EnumWithHighBits &amp;a ,Uint16EnumWithHighBits b ){return a =a |b ;}inline constexpr mozilla ::CastableTypedEnumResult &lt;Uint16EnumWithHighBits &gt;operator &amp;(Uint16EnumWithHighBits a ,Uint16EnumWithHighBits b ){typedef mozilla ::CastableTypedEnumResult &lt;Uint16EnumWithHighBits &gt;Result ;typedef mozilla ::detail ::UnsignedIntegerTypeForEnum &lt;Uint16EnumWithHighBits &gt;::Type U ;return Result (Uint16EnumWithHighBits (U (a )&amp;U (b )));}inline Uint16EnumWithHighBits &amp;operator &amp;=(Uint16EnumWithHighBits &amp;a ,Uint16EnumWithHighBits b ){return a =a &amp;b ;}inline constexpr mozilla ::CastableTypedEnumResult &lt;Uint16EnumWithHighBits &gt;operator ^(Uint16EnumWithHighBits a ,Uint16EnumWithHighBits b ){typedef mozilla ::CastableTypedEnumResult &lt;Uint16EnumWithHighBits &gt;Result ;typedef mozilla ::detail ::UnsignedIntegerTypeForEnum &lt;Uint16EnumWithHighBits &gt;::Type U ;return Result (Uint16EnumWithHighBits (U (a )^U (b )));}inline Uint16EnumWithHighBits &amp;operator ^=(Uint16EnumWithHighBits &amp;a ,Uint16EnumWithHighBits b ){return a =a ^b ;}inline constexpr mozilla ::CastableTypedEnumResult &lt;Uint16EnumWithHighBits &gt;operator ~(Uint16EnumWithHighBits a ){typedef mozilla ::CastableTypedEnumResult &lt;Uint16EnumWithHighBits &gt;Result ;typedef mozilla ::detail ::UnsignedIntegerTypeForEnum &lt;Uint16EnumWithHighBits &gt;::Type U ;return Result (Uint16EnumWithHighBits (~(U (a ))));}</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>1</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>412</integer>
					</dict>
					<key>name</key>
					<string>MOZ_MAKE_ENUM_CLASS_BITWISE_OPERATORS(Uint16EnumWithHighBits)</string>
				</dict>
			</array>
			<key>path</key>
			<array>
				<dict>
					<key>edges</key>
					<array>
						<dict>
							<key>end</key>
							<array>
								<dict>
									<key>col</key>
									<integer>3</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>440</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>10</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>440</integer>
								</dict>
							</array>
							<key>start</key>
							<array>
								<dict>
									<key>col</key>
									<integer>3</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>439</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>10</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>439</integer>
								</dict>
							</array>
						</dict>
					</array>
					<key>kind</key>
					<string>control</string>
				</dict>
				<dict>
					<key>edges</key>
					<array>
						<dict>
							<key>end</key>
							<array>
								<dict>
									<key>col</key>
									<integer>3</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>441</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>20</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>441</integer>
								</dict>
							</array>
							<key>start</key>
							<array>
								<dict>
									<key>col</key>
									<integer>3</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>440</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>10</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>440</integer>
								</dict>
							</array>
						</dict>
					</array>
					<key>kind</key>
					<string>control</string>
				</dict>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>3</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>443</integer>
					</dict>
					<key>message</key>
					<string>Calling 'operator|'</string>
					<key>ranges</key>
					<array>
						<array>
							<dict>
								<key>col</key>
								<integer>3</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>443</integer>
							</dict>
							<dict>
								<key>col</key>
								<integer>37</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>443</integer>
							</dict>
						</array>
					</array>
				</dict>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>1</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>412</integer>
					</dict>
					<key>message</key>
					<string>Entered call from 'TestIsNotTruncated&lt;Uint16EnumWithHighBits, unsigned short&gt;'</string>
					<key>ranges</key>
					<array>
						<array>
							<dict>
								<key>col</key>
								<integer>1</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>412</integer>
							</dict>
							<dict>
								<key>col</key>
								<integer>1</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>412</integer>
							</dict>
						</array>
					</array>
				</dict>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>1</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>412</integer>
					</dict>
					<key>message</key>
					<string>The value provided to the cast expression is not in the valid range of values for the enum</string>
					<key>ranges</key>
					<array>
						<array>
							<dict>
								<key>col</key>
								<integer>1</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>412</integer>
							</dict>
							<dict>
								<key>col</key>
								<integer>61</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>412</integer>
							</dict>
						</array>
					</array>
				</dict>
			</array>
		</dict>
		<dict>
			<key>category</key>
			<string>Logic error</string>
			<key>check_name</key>
			<string>alpha.cplusplus.EnumCastOutOfRange</string>
			<key>description</key>
			<string>The value provided to the cast expression is not in the valid range of values for the enum</string>
			<key>issue_hash_content_of_line_in_context</key>
			<string>912c908097ed59d281a10bef3a86f6dc</string>
			<key>location</key>
			<dict>
				<key>col</key>
				<integer>1</integer>
				<key>file</key>
				<integer>0</integer>
				<key>line</key>
				<integer>412</integer>
			</dict>
			<key>macro_expansions</key>
			<array>
				<dict>
					<key>expansion</key>
					<string>do {static_assert (mozilla ::detail ::AssertionConditionType &lt;decltype (IntType (a ))&gt;::isValid ,"invalid assertion condition");if ((__builtin_expect (!!(!(!!(IntType (a )))),0))){do {}while (false );do {}while (false );do {*((volatile int *)__null )=441;::abort ();}while (false );}}while (false )</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>3</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>441</integer>
					</dict>
					<key>name</key>
					<string>MOZ_RELEASE_ASSERT(IntType(a))</string>
				</dict>
				<dict>
					<key>expansion</key>
					<string>do {static_assert (mozilla ::detail ::AssertionConditionType &lt;decltype (IntType (b ))&gt;::isValid ,"invalid assertion condition");if ((__builtin_expect (!!(!(!!(IntType (b )))),0))){do {}while (false );do {}while (false );do {*((volatile int *)__null )=442;::abort ();}while (false );}}while (false )</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>3</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>442</integer>
					</dict>
					<key>name</key>
					<string>MOZ_RELEASE_ASSERT(IntType(b))</string>
				</dict>
				<dict>
					<key>expansion</key>
					<string>do {static_assert (mozilla ::detail ::AssertionConditionType &lt;decltype (a |EnumType ::B )&gt;::isValid ,"invalid assertion condition");if ((__builtin_expect (!!(!(!!(a |EnumType ::B ))),0))){do {}while (false );do {}while (false );do {*((volatile int *)__null )=443;::abort ();}while (false );}}while (false )</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>3</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>443</integer>
					</dict>
					<key>name</key>
					<string>MOZ_RELEASE_ASSERT(a | EnumType::B)</string>
				</dict>
				<dict>
					<key>expansion</key>
					<string>do {static_assert (mozilla ::detail ::AssertionConditionType &lt;decltype (a |b )&gt;::isValid ,"invalid assertion condition");if ((__builtin_expect (!!(!(!!(a |b ))),0))){do {}while (false );do {}while (false );do {*((volatile int *)__null )=444;::abort ();}while (false );}}while (false )</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>3</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>444</integer>
					</dict>
					<key>name</key>
					<string>MOZ_RELEASE_ASSERT(a | b)</string>
				</dict>
				<dict>
					<key>expansion</key>
					<string>do {static_assert (mozilla ::detail ::AssertionConditionType &lt;decltype (EnumType ::A |EnumType ::B )&gt;::isValid ,"invalid assertion condition");if ((__builtin_expect (!!(!(!!(EnumType ::A |EnumType ::B ))),0))){do {}while (false );do {}while (false );do {*((volatile int *)__null )=445;::abort ();}while (false );}}while (false )</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>3</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>445</integer>
					</dict>
					<key>name</key>
					<string>MOZ_RELEASE_ASSERT(EnumType::A | EnumType::B)</string>
				</dict>
				<dict>
					<key>expansion</key>
					<string>do {static_assert (mozilla ::detail ::AssertionConditionType &lt;decltype (IntType (c ))&gt;::isValid ,"invalid assertion condition");if ((__builtin_expect (!!(!(!!(IntType (c )))),0))){do {}while (false );do {}while (false );do {*((volatile int *)__null )=447;::abort ();}while (false );}}while (false )</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>3</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>447</integer>
					</dict>
					<key>name</key>
					<string>MOZ_RELEASE_ASSERT(IntType(c))</string>
				</dict>
				<dict>
					<key>expansion</key>
					<string>do {static_assert (mozilla ::detail ::AssertionConditionType &lt;decltype (c &amp;c )&gt;::isValid ,"invalid assertion condition");if ((__builtin_expect (!!(!(!!(c &amp;c ))),0))){do {}while (false );do {}while (false );do {*((volatile int *)__null )=448;::abort ();}while (false );}}while (false )</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>3</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>448</integer>
					</dict>
					<key>name</key>
					<string>MOZ_RELEASE_ASSERT(c &amp; c)</string>
				</dict>
				<dict>
					<key>expansion</key>
					<string>inline constexpr mozilla ::CastableTypedEnumResult &lt;Uint16EnumWithHighBits &gt;operator |(Uint16EnumWithHighBits a ,Uint16EnumWithHighBits b ){typedef mozilla ::CastableTypedEnumResult &lt;Uint16EnumWithHighBits &gt;Result ;typedef mozilla ::detail ::UnsignedIntegerTypeForEnum &lt;Uint16EnumWithHighBits &gt;::Type U ;return Result (Uint16EnumWithHighBits (U (a )|U (b )));}inline Uint16EnumWithHighBits &amp;operator |=(Uint16EnumWithHighBits &amp;a ,Uint16EnumWithHighBits b ){return a =a |b ;}inline constexpr mozilla ::CastableTypedEnumResult &lt;Uint16EnumWithHighBits &gt;operator &amp;(Uint16EnumWithHighBits a ,Uint16EnumWithHighBits b ){typedef mozilla ::CastableTypedEnumResult &lt;Uint16EnumWithHighBits &gt;Result ;typedef mozilla ::detail ::UnsignedIntegerTypeForEnum &lt;Uint16EnumWithHighBits &gt;::Type U ;return Result (Uint16EnumWithHighBits (U (a )&amp;U (b )));}inline Uint16EnumWithHighBits &amp;operator &amp;=(Uint16EnumWithHighBits &amp;a ,Uint16EnumWithHighBits b ){return a =a &amp;b ;}inline constexpr mozilla ::CastableTypedEnumResult &lt;Uint16EnumWithHighBits &gt;operator ^(Uint16EnumWithHighBits a ,Uint16EnumWithHighBits b ){typedef mozilla ::CastableTypedEnumResult &lt;Uint16EnumWithHighBits &gt;Result ;typedef mozilla ::detail ::UnsignedIntegerTypeForEnum &lt;Uint16EnumWithHighBits &gt;::Type U ;return Result (Uint16EnumWithHighBits (U (a )^U (b )));}inline Uint16EnumWithHighBits &amp;operator ^=(Uint16EnumWithHighBits &amp;a ,Uint16EnumWithHighBits b ){return a =a ^b ;}inline constexpr mozilla ::CastableTypedEnumResult &lt;Uint16EnumWithHighBits &gt;operator ~(Uint16EnumWithHighBits a ){typedef mozilla ::CastableTypedEnumResult &lt;Uint16EnumWithHighBits &gt;Result ;typedef mozilla ::detail ::UnsignedIntegerTypeForEnum &lt;Uint16EnumWithHighBits &gt;::Type U ;return Result (Uint16EnumWithHighBits (~(U (a ))));}</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>1</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>412</integer>
					</dict>
					<key>name</key>
					<string>MOZ_MAKE_ENUM_CLASS_BITWISE_OPERATORS(Uint16EnumWithHighBits)</string>
				</dict>
			</array>
			<key>path</key>
			<array>
				<dict>
					<key>edges</key>
					<array>
						<dict>
							<key>end</key>
							<array>
								<dict>
									<key>col</key>
									<integer>3</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>440</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>10</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>440</integer>
								</dict>
							</array>
							<key>start</key>
							<array>
								<dict>
									<key>col</key>
									<integer>3</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>439</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>10</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>439</integer>
								</dict>
							</array>
						</dict>
					</array>
					<key>kind</key>
					<string>control</string>
				</dict>
				<dict>
					<key>edges</key>
					<array>
						<dict>
							<key>end</key>
							<array>
								<dict>
									<key>col</key>
									<integer>3</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>441</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>20</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>441</integer>
								</dict>
							</array>
							<key>start</key>
							<array>
								<dict>
									<key>col</key>
									<integer>3</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>440</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>10</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>440</integer>
								</dict>
							</array>
						</dict>
					</array>
					<key>kind</key>
					<string>control</string>
				</dict>
				<dict>
					<key>edges</key>
					<array>
						<dict>
							<key>end</key>
							<array>
								<dict>
									<key>col</key>
									<integer>3</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>446</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>10</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>446</integer>
								</dict>
							</array>
							<key>start</key>
							<array>
								<dict>
									<key>col</key>
									<integer>3</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>441</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>20</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>441</integer>
								</dict>
							</array>
						</dict>
					</array>
					<key>kind</key>
					<string>control</string>
				</dict>
				<dict>
					<key>edges</key>
					<array>
						<dict>
							<key>end</key>
							<array>
								<dict>
									<key>col</key>
									<integer>3</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>447</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>20</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>447</integer>
								</dict>
							</array>
							<key>start</key>
							<array>
								<dict>
									<key>col</key>
									<integer>3</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>446</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>10</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>446</integer>
								</dict>
							</array>
						</dict>
					</array>
					<key>kind</key>
					<string>control</string>
				</dict>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>3</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>448</integer>
					</dict>
					<key>message</key>
					<string>Calling 'operator&amp;'</string>
					<key>ranges</key>
					<array>
						<array>
							<dict>
								<key>col</key>
								<integer>3</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>448</integer>
							</dict>
							<dict>
								<key>col</key>
								<integer>27</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>448</integer>
							</dict>
						</array>
					</array>
				</dict>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>1</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>412</integer>
					</dict>
					<key>message</key>
					<string>Entered call from 'TestIsNotTruncated&lt;Uint16EnumWithHighBits, unsigned short&gt;'</string>
					<key>ranges</key>
					<array>
						<array>
							<dict>
								<key>col</key>
								<integer>1</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>412</integer>
							</dict>
							<dict>
								<key>col</key>
								<integer>1</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>412</integer>
							</dict>
						</array>
					</array>
				</dict>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>1</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>412</integer>
					</dict>
					<key>message</key>
					<string>The value provided to the cast expression is not in the valid range of values for the enum</string>
					<key>ranges</key>
					<array>
						<array>
							<dict>
								<key>col</key>
								<integer>1</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>412</integer>
							</dict>
							<dict>
								<key>col</key>
								<integer>61</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>412</integer>
							</dict>
						</array>
					</array>
				</dict>
			</array>
		</dict>
		<dict>
			<key>category</key>
			<string>Logic error</string>
			<key>check_name</key>
			<string>alpha.cplusplus.EnumCastOutOfRange</string>
			<key>description</key>
			<string>The value provided to the cast expression is not in the valid range of values for the enum</string>
			<key>issue_hash_content_of_line_in_context</key>
			<string>105dc6a4a2351ca71e0135a696a5f050</string>
			<key>location</key>
			<dict>
				<key>col</key>
				<integer>1</integer>
				<key>file</key>
				<integer>0</integer>
				<key>line</key>
				<integer>415</integer>
			</dict>
			<key>macro_expansions</key>
			<array>
				<dict>
					<key>expansion</key>
					<string>do {static_assert (mozilla ::detail ::AssertionConditionType &lt;decltype (IntType (a ))&gt;::isValid ,"invalid assertion condition");if ((__builtin_expect (!!(!(!!(IntType (a )))),0))){do {}while (false );do {}while (false );do {*((volatile int *)__null )=441;::abort ();}while (false );}}while (false )</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>3</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>441</integer>
					</dict>
					<key>name</key>
					<string>MOZ_RELEASE_ASSERT(IntType(a))</string>
				</dict>
				<dict>
					<key>expansion</key>
					<string>do {static_assert (mozilla ::detail ::AssertionConditionType &lt;decltype (IntType (b ))&gt;::isValid ,"invalid assertion condition");if ((__builtin_expect (!!(!(!!(IntType (b )))),0))){do {}while (false );do {}while (false );do {*((volatile int *)__null )=442;::abort ();}while (false );}}while (false )</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>3</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>442</integer>
					</dict>
					<key>name</key>
					<string>MOZ_RELEASE_ASSERT(IntType(b))</string>
				</dict>
				<dict>
					<key>expansion</key>
					<string>do {static_assert (mozilla ::detail ::AssertionConditionType &lt;decltype (a |EnumType ::B )&gt;::isValid ,"invalid assertion condition");if ((__builtin_expect (!!(!(!!(a |EnumType ::B ))),0))){do {}while (false );do {}while (false );do {*((volatile int *)__null )=443;::abort ();}while (false );}}while (false )</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>3</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>443</integer>
					</dict>
					<key>name</key>
					<string>MOZ_RELEASE_ASSERT(a | EnumType::B)</string>
				</dict>
				<dict>
					<key>expansion</key>
					<string>inline constexpr mozilla ::CastableTypedEnumResult &lt;Int32EnumWithHighBits &gt;operator |(Int32EnumWithHighBits a ,Int32EnumWithHighBits b ){typedef mozilla ::CastableTypedEnumResult &lt;Int32EnumWithHighBits &gt;Result ;typedef mozilla ::detail ::UnsignedIntegerTypeForEnum &lt;Int32EnumWithHighBits &gt;::Type U ;return Result (Int32EnumWithHighBits (U (a )|U (b )));}inline Int32EnumWithHighBits &amp;operator |=(Int32EnumWithHighBits &amp;a ,Int32EnumWithHighBits b ){return a =a |b ;}inline constexpr mozilla ::CastableTypedEnumResult &lt;Int32EnumWithHighBits &gt;operator &amp;(Int32EnumWithHighBits a ,Int32EnumWithHighBits b ){typedef mozilla ::CastableTypedEnumResult &lt;Int32EnumWithHighBits &gt;Result ;typedef mozilla ::detail ::UnsignedIntegerTypeForEnum &lt;Int32EnumWithHighBits &gt;::Type U ;return Result (Int32EnumWithHighBits (U (a )&amp;U (b )));}inline Int32EnumWithHighBits &amp;operator &amp;=(Int32EnumWithHighBits &amp;a ,Int32EnumWithHighBits b ){return a =a &amp;b ;}inline constexpr mozilla ::CastableTypedEnumResult &lt;Int32EnumWithHighBits &gt;operator ^(Int32EnumWithHighBits a ,Int32EnumWithHighBits b ){typedef mozilla ::CastableTypedEnumResult &lt;Int32EnumWithHighBits &gt;Result ;typedef mozilla ::detail ::UnsignedIntegerTypeForEnum &lt;Int32EnumWithHighBits &gt;::Type U ;return Result (Int32EnumWithHighBits (U (a )^U (b )));}inline Int32EnumWithHighBits &amp;operator ^=(Int32EnumWithHighBits &amp;a ,Int32EnumWithHighBits b ){return a =a ^b ;}inline constexpr mozilla ::CastableTypedEnumResult &lt;Int32EnumWithHighBits &gt;operator ~(Int32EnumWithHighBits a ){typedef mozilla ::CastableTypedEnumResult &lt;Int32EnumWithHighBits &gt;Result ;typedef mozilla ::detail ::UnsignedIntegerTypeForEnum &lt;Int32EnumWithHighBits &gt;::Type U ;return Result (Int32EnumWithHighBits (~(U (a ))));}</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>1</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>415</integer>
					</dict>
					<key>name</key>
					<string>MOZ_MAKE_ENUM_CLASS_BITWISE_OPERATORS(Int32EnumWithHighBits)</string>
				</dict>
			</array>
			<key>path</key>
			<array>
				<dict>
					<key>edges</key>
					<array>
						<dict>
							<key>end</key>
							<array>
								<dict>
									<key>col</key>
									<integer>3</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>440</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>10</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>440</integer>
								</dict>
							</array>
							<key>start</key>
							<array>
								<dict>
									<key>col</key>
									<integer>3</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>439</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>10</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>439</integer>
								</dict>
							</array>
						</dict>
					</array>
					<key>kind</key>
					<string>control</string>
				</dict>
				<dict>
					<key>edges</key>
					<array>
						<dict>
							<key>end</key>
							<array>
								<dict>
									<key>col</key>
									<integer>3</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>441</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>20</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>441</integer>
								</dict>
							</array>
							<key>start</key>
							<array>
								<dict>
									<key>col</key>
									<integer>3</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>440</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>10</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>440</integer>
								</dict>
							</array>
						</dict>
					</array>
					<key>kind</key>
					<string>control</string>
				</dict>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>3</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>443</integer>
					</dict>
					<key>message</key>
					<string>Calling 'operator|'</string>
					<key>ranges</key>
					<array>
						<array>
							<dict>
								<key>col</key>
								<integer>3</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>443</integer>
							</dict>
							<dict>
								<key>col</key>
								<integer>37</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>443</integer>
							</dict>
						</array>
					</array>
				</dict>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>1</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>415</integer>
					</dict>
					<key>message</key>
					<string>Entered call from 'TestIsNotTruncated&lt;Int32EnumWithHighBits, int&gt;'</string>
					<key>ranges</key>
					<array>
						<array>
							<dict>
								<key>col</key>
								<integer>1</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>415</integer>
							</dict>
							<dict>
								<key>col</key>
								<integer>1</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>415</integer>
							</dict>
						</array>
					</array>
				</dict>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>1</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>415</integer>
					</dict>
					<key>message</key>
					<string>The value provided to the cast expression is not in the valid range of values for the enum</string>
					<key>ranges</key>
					<array>
						<array>
							<dict>
								<key>col</key>
								<integer>1</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>415</integer>
							</dict>
							<dict>
								<key>col</key>
								<integer>60</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>415</integer>
							</dict>
						</array>
					</array>
				</dict>
			</array>
		</dict>
		<dict>
			<key>category</key>
			<string>Logic error</string>
			<key>check_name</key>
			<string>alpha.cplusplus.EnumCastOutOfRange</string>
			<key>description</key>
			<string>The value provided to the cast expression is not in the valid range of values for the enum</string>
			<key>issue_hash_content_of_line_in_context</key>
			<string>994585e0647a6da598c5592ffb4b0d50</string>
			<key>location</key>
			<dict>
				<key>col</key>
				<integer>1</integer>
				<key>file</key>
				<integer>0</integer>
				<key>line</key>
				<integer>415</integer>
			</dict>
			<key>macro_expansions</key>
			<array>
				<dict>
					<key>expansion</key>
					<string>do {static_assert (mozilla ::detail ::AssertionConditionType &lt;decltype (IntType (a ))&gt;::isValid ,"invalid assertion condition");if ((__builtin_expect (!!(!(!!(IntType (a )))),0))){do {}while (false );do {}while (false );do {*((volatile int *)__null )=441;::abort ();}while (false );}}while (false )</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>3</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>441</integer>
					</dict>
					<key>name</key>
					<string>MOZ_RELEASE_ASSERT(IntType(a))</string>
				</dict>
				<dict>
					<key>expansion</key>
					<string>do {static_assert (mozilla ::detail ::AssertionConditionType &lt;decltype (IntType (b ))&gt;::isValid ,"invalid assertion condition");if ((__builtin_expect (!!(!(!!(IntType (b )))),0))){do {}while (false );do {}while (false );do {*((volatile int *)__null )=442;::abort ();}while (false );}}while (false )</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>3</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>442</integer>
					</dict>
					<key>name</key>
					<string>MOZ_RELEASE_ASSERT(IntType(b))</string>
				</dict>
				<dict>
					<key>expansion</key>
					<string>do {static_assert (mozilla ::detail ::AssertionConditionType &lt;decltype (a |EnumType ::B )&gt;::isValid ,"invalid assertion condition");if ((__builtin_expect (!!(!(!!(a |EnumType ::B ))),0))){do {}while (false );do {}while (false );do {*((volatile int *)__null )=443;::abort ();}while (false );}}while (false )</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>3</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>443</integer>
					</dict>
					<key>name</key>
					<string>MOZ_RELEASE_ASSERT(a | EnumType::B)</string>
				</dict>
				<dict>
					<key>expansion</key>
					<string>do {static_assert (mozilla ::detail ::AssertionConditionType &lt;decltype (a |b )&gt;::isValid ,"invalid assertion condition");if ((__builtin_expect (!!(!(!!(a |b ))),0))){do {}while (false );do {}while (false );do {*((volatile int *)__null )=444;::abort ();}while (false );}}while (false )</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>3</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>444</integer>
					</dict>
					<key>name</key>
					<string>MOZ_RELEASE_ASSERT(a | b)</string>
				</dict>
				<dict>
					<key>expansion</key>
					<string>do {static_assert (mozilla ::detail ::AssertionConditionType &lt;decltype (EnumType ::A |EnumType ::B )&gt;::isValid ,"invalid assertion condition");if ((__builtin_expect (!!(!(!!(EnumType ::A |EnumType ::B ))),0))){do {}while (false );do {}while (false );do {*((volatile int *)__null )=445;::abort ();}while (false );}}while (false )</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>3</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>445</integer>
					</dict>
					<key>name</key>
					<string>MOZ_RELEASE_ASSERT(EnumType::A | EnumType::B)</string>
				</dict>
				<dict>
					<key>expansion</key>
					<string>do {static_assert (mozilla ::detail ::AssertionConditionType &lt;decltype (IntType (c ))&gt;::isValid ,"invalid assertion condition");if ((__builtin_expect (!!(!(!!(IntType (c )))),0))){do {}while (false );do {}while (false );do {*((volatile int *)__null )=447;::abort ();}while (false );}}while (false )</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>3</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>447</integer>
					</dict>
					<key>name</key>
					<string>MOZ_RELEASE_ASSERT(IntType(c))</string>
				</dict>
				<dict>
					<key>expansion</key>
					<string>do {static_assert (mozilla ::detail ::AssertionConditionType &lt;decltype (c &amp;c )&gt;::isValid ,"invalid assertion condition");if ((__builtin_expect (!!(!(!!(c &amp;c ))),0))){do {}while (false );do {}while (false );do {*((volatile int *)__null )=448;::abort ();}while (false );}}while (false )</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>3</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>448</integer>
					</dict>
					<key>name</key>
					<string>MOZ_RELEASE_ASSERT(c &amp; c)</string>
				</dict>
				<dict>
					<key>expansion</key>
					<string>inline constexpr mozilla ::CastableTypedEnumResult &lt;Int32EnumWithHighBits &gt;operator |(Int32EnumWithHighBits a ,Int32EnumWithHighBits b ){typedef mozilla ::CastableTypedEnumResult &lt;Int32EnumWithHighBits &gt;Result ;typedef mozilla ::detail ::UnsignedIntegerTypeForEnum &lt;Int32EnumWithHighBits &gt;::Type U ;return Result (Int32EnumWithHighBits (U (a )|U (b )));}inline Int32EnumWithHighBits &amp;operator |=(Int32EnumWithHighBits &amp;a ,Int32EnumWithHighBits b ){return a =a |b ;}inline constexpr mozilla ::CastableTypedEnumResult &lt;Int32EnumWithHighBits &gt;operator &amp;(Int32EnumWithHighBits a ,Int32EnumWithHighBits b ){typedef mozilla ::CastableTypedEnumResult &lt;Int32EnumWithHighBits &gt;Result ;typedef mozilla ::detail ::UnsignedIntegerTypeForEnum &lt;Int32EnumWithHighBits &gt;::Type U ;return Result (Int32EnumWithHighBits (U (a )&amp;U (b )));}inline Int32EnumWithHighBits &amp;operator &amp;=(Int32EnumWithHighBits &amp;a ,Int32EnumWithHighBits b ){return a =a &amp;b ;}inline constexpr mozilla ::CastableTypedEnumResult &lt;Int32EnumWithHighBits &gt;operator ^(Int32EnumWithHighBits a ,Int32EnumWithHighBits b ){typedef mozilla ::CastableTypedEnumResult &lt;Int32EnumWithHighBits &gt;Result ;typedef mozilla ::detail ::UnsignedIntegerTypeForEnum &lt;Int32EnumWithHighBits &gt;::Type U ;return Result (Int32EnumWithHighBits (U (a )^U (b )));}inline Int32EnumWithHighBits &amp;operator ^=(Int32EnumWithHighBits &amp;a ,Int32EnumWithHighBits b ){return a =a ^b ;}inline constexpr mozilla ::CastableTypedEnumResult &lt;Int32EnumWithHighBits &gt;operator ~(Int32EnumWithHighBits a ){typedef mozilla ::CastableTypedEnumResult &lt;Int32EnumWithHighBits &gt;Result ;typedef mozilla ::detail ::UnsignedIntegerTypeForEnum &lt;Int32EnumWithHighBits &gt;::Type U ;return Result (Int32EnumWithHighBits (~(U (a ))));}</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>1</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>415</integer>
					</dict>
					<key>name</key>
					<string>MOZ_MAKE_ENUM_CLASS_BITWISE_OPERATORS(Int32EnumWithHighBits)</string>
				</dict>
			</array>
			<key>path</key>
			<array>
				<dict>
					<key>edges</key>
					<array>
						<dict>
							<key>end</key>
							<array>
								<dict>
									<key>col</key>
									<integer>3</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>440</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>10</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>440</integer>
								</dict>
							</array>
							<key>start</key>
							<array>
								<dict>
									<key>col</key>
									<integer>3</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>439</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>10</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>439</integer>
								</dict>
							</array>
						</dict>
					</array>
					<key>kind</key>
					<string>control</string>
				</dict>
				<dict>
					<key>edges</key>
					<array>
						<dict>
							<key>end</key>
							<array>
								<dict>
									<key>col</key>
									<integer>3</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>441</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>20</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>441</integer>
								</dict>
							</array>
							<key>start</key>
							<array>
								<dict>
									<key>col</key>
									<integer>3</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>440</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>10</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>440</integer>
								</dict>
							</array>
						</dict>
					</array>
					<key>kind</key>
					<string>control</string>
				</dict>
				<dict>
					<key>edges</key>
					<array>
						<dict>
							<key>end</key>
							<array>
								<dict>
									<key>col</key>
									<integer>3</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>446</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>10</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>446</integer>
								</dict>
							</array>
							<key>start</key>
							<array>
								<dict>
									<key>col</key>
									<integer>3</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>441</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>20</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>441</integer>
								</dict>
							</array>
						</dict>
					</array>
					<key>kind</key>
					<string>control</string>
				</dict>
				<dict>
					<key>edges</key>
					<array>
						<dict>
							<key>end</key>
							<array>
								<dict>
									<key>col</key>
									<integer>3</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>447</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>20</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>447</integer>
								</dict>
							</array>
							<key>start</key>
							<array>
								<dict>
									<key>col</key>
									<integer>3</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>446</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>10</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>446</integer>
								</dict>
							</array>
						</dict>
					</array>
					<key>kind</key>
					<string>control</string>
				</dict>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>3</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>448</integer>
					</dict>
					<key>message</key>
					<string>Calling 'operator&amp;'</string>
					<key>ranges</key>
					<array>
						<array>
							<dict>
								<key>col</key>
								<integer>3</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>448</integer>
							</dict>
							<dict>
								<key>col</key>
								<integer>27</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>448</integer>
							</dict>
						</array>
					</array>
				</dict>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>1</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>415</integer>
					</dict>
					<key>message</key>
					<string>Entered call from 'TestIsNotTruncated&lt;Int32EnumWithHighBits, int&gt;'</string>
					<key>ranges</key>
					<array>
						<array>
							<dict>
								<key>col</key>
								<integer>1</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>415</integer>
							</dict>
							<dict>
								<key>col</key>
								<integer>1</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>415</integer>
							</dict>
						</array>
					</array>
				</dict>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>1</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>415</integer>
					</dict>
					<key>message</key>
					<string>The value provided to the cast expression is not in the valid range of values for the enum</string>
					<key>ranges</key>
					<array>
						<array>
							<dict>
								<key>col</key>
								<integer>1</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>415</integer>
							</dict>
							<dict>
								<key>col</key>
								<integer>60</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>415</integer>
							</dict>
						</array>
					</array>
				</dict>
			</array>
		</dict>
		<dict>
			<key>category</key>
			<string>Logic error</string>
			<key>check_name</key>
			<string>alpha.cplusplus.EnumCastOutOfRange</string>
			<key>description</key>
			<string>The value provided to the cast expression is not in the valid range of values for the enum</string>
			<key>issue_hash_content_of_line_in_context</key>
			<string>ffafdbfdb89aeeee691c889bce3d4aa6</string>
			<key>location</key>
			<dict>
				<key>col</key>
				<integer>1</integer>
				<key>file</key>
				<integer>0</integer>
				<key>line</key>
				<integer>421</integer>
			</dict>
			<key>macro_expansions</key>
			<array>
				<dict>
					<key>expansion</key>
					<string>do {static_assert (mozilla ::detail ::AssertionConditionType &lt;decltype (IntType (a ))&gt;::isValid ,"invalid assertion condition");if ((__builtin_expect (!!(!(!!(IntType (a )))),0))){do {}while (false );do {}while (false );do {*((volatile int *)__null )=441;::abort ();}while (false );}}while (false )</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>3</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>441</integer>
					</dict>
					<key>name</key>
					<string>MOZ_RELEASE_ASSERT(IntType(a))</string>
				</dict>
				<dict>
					<key>expansion</key>
					<string>do {static_assert (mozilla ::detail ::AssertionConditionType &lt;decltype (IntType (b ))&gt;::isValid ,"invalid assertion condition");if ((__builtin_expect (!!(!(!!(IntType (b )))),0))){do {}while (false );do {}while (false );do {*((volatile int *)__null )=442;::abort ();}while (false );}}while (false )</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>3</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>442</integer>
					</dict>
					<key>name</key>
					<string>MOZ_RELEASE_ASSERT(IntType(b))</string>
				</dict>
				<dict>
					<key>expansion</key>
					<string>do {static_assert (mozilla ::detail ::AssertionConditionType &lt;decltype (a |EnumType ::B )&gt;::isValid ,"invalid assertion condition");if ((__builtin_expect (!!(!(!!(a |EnumType ::B ))),0))){do {}while (false );do {}while (false );do {*((volatile int *)__null )=443;::abort ();}while (false );}}while (false )</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>3</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>443</integer>
					</dict>
					<key>name</key>
					<string>MOZ_RELEASE_ASSERT(a | EnumType::B)</string>
				</dict>
				<dict>
					<key>expansion</key>
					<string>inline constexpr mozilla ::CastableTypedEnumResult &lt;Uint32EnumWithHighBits &gt;operator |(Uint32EnumWithHighBits a ,Uint32EnumWithHighBits b ){typedef mozilla ::CastableTypedEnumResult &lt;Uint32EnumWithHighBits &gt;Result ;typedef mozilla ::detail ::UnsignedIntegerTypeForEnum &lt;Uint32EnumWithHighBits &gt;::Type U ;return Result (Uint32EnumWithHighBits (U (a )|U (b )));}inline Uint32EnumWithHighBits &amp;operator |=(Uint32EnumWithHighBits &amp;a ,Uint32EnumWithHighBits b ){return a =a |b ;}inline constexpr mozilla ::CastableTypedEnumResult &lt;Uint32EnumWithHighBits &gt;operator &amp;(Uint32EnumWithHighBits a ,Uint32EnumWithHighBits b ){typedef mozilla ::CastableTypedEnumResult &lt;Uint32EnumWithHighBits &gt;Result ;typedef mozilla ::detail ::UnsignedIntegerTypeForEnum &lt;Uint32EnumWithHighBits &gt;::Type U ;return Result (Uint32EnumWithHighBits (U (a )&amp;U (b )));}inline Uint32EnumWithHighBits &amp;operator &amp;=(Uint32EnumWithHighBits &amp;a ,Uint32EnumWithHighBits b ){return a =a &amp;b ;}inline constexpr mozilla ::CastableTypedEnumResult &lt;Uint32EnumWithHighBits &gt;operator ^(Uint32EnumWithHighBits a ,Uint32EnumWithHighBits b ){typedef mozilla ::CastableTypedEnumResult &lt;Uint32EnumWithHighBits &gt;Result ;typedef mozilla ::detail ::UnsignedIntegerTypeForEnum &lt;Uint32EnumWithHighBits &gt;::Type U ;return Result (Uint32EnumWithHighBits (U (a )^U (b )));}inline Uint32EnumWithHighBits &amp;operator ^=(Uint32EnumWithHighBits &amp;a ,Uint32EnumWithHighBits b ){return a =a ^b ;}inline constexpr mozilla ::CastableTypedEnumResult &lt;Uint32EnumWithHighBits &gt;operator ~(Uint32EnumWithHighBits a ){typedef mozilla ::CastableTypedEnumResult &lt;Uint32EnumWithHighBits &gt;Result ;typedef mozilla ::detail ::UnsignedIntegerTypeForEnum &lt;Uint32EnumWithHighBits &gt;::Type U ;return Result (Uint32EnumWithHighBits (~(U (a ))));}</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>1</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>421</integer>
					</dict>
					<key>name</key>
					<string>MOZ_MAKE_ENUM_CLASS_BITWISE_OPERATORS(Uint32EnumWithHighBits)</string>
				</dict>
			</array>
			<key>path</key>
			<array>
				<dict>
					<key>edges</key>
					<array>
						<dict>
							<key>end</key>
							<array>
								<dict>
									<key>col</key>
									<integer>3</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>440</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>10</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>440</integer>
								</dict>
							</array>
							<key>start</key>
							<array>
								<dict>
									<key>col</key>
									<integer>3</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>439</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>10</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>439</integer>
								</dict>
							</array>
						</dict>
					</array>
					<key>kind</key>
					<string>control</string>
				</dict>
				<dict>
					<key>edges</key>
					<array>
						<dict>
							<key>end</key>
							<array>
								<dict>
									<key>col</key>
									<integer>3</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>441</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>20</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>441</integer>
								</dict>
							</array>
							<key>start</key>
							<array>
								<dict>
									<key>col</key>
									<integer>3</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>440</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>10</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>440</integer>
								</dict>
							</array>
						</dict>
					</array>
					<key>kind</key>
					<string>control</string>
				</dict>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>3</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>443</integer>
					</dict>
					<key>message</key>
					<string>Calling 'operator|'</string>
					<key>ranges</key>
					<array>
						<array>
							<dict>
								<key>col</key>
								<integer>3</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>443</integer>
							</dict>
							<dict>
								<key>col</key>
								<integer>37</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>443</integer>
							</dict>
						</array>
					</array>
				</dict>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>1</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>421</integer>
					</dict>
					<key>message</key>
					<string>Entered call from 'TestIsNotTruncated&lt;Uint32EnumWithHighBits, unsigned int&gt;'</string>
					<key>ranges</key>
					<array>
						<array>
							<dict>
								<key>col</key>
								<integer>1</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>421</integer>
							</dict>
							<dict>
								<key>col</key>
								<integer>1</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>421</integer>
							</dict>
						</array>
					</array>
				</dict>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>1</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>421</integer>
					</dict>
					<key>message</key>
					<string>The value provided to the cast expression is not in the valid range of values for the enum</string>
					<key>ranges</key>
					<array>
						<array>
							<dict>
								<key>col</key>
								<integer>1</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>421</integer>
							</dict>
							<dict>
								<key>col</key>
								<integer>61</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>421</integer>
							</dict>
						</array>
					</array>
				</dict>
			</array>
		</dict>
		<dict>
			<key>category</key>
			<string>Logic error</string>
			<key>check_name</key>
			<string>alpha.cplusplus.EnumCastOutOfRange</string>
			<key>description</key>
			<string>The value provided to the cast expression is not in the valid range of values for the enum</string>
			<key>issue_hash_content_of_line_in_context</key>
			<string>408dfcb1e3fac6903f91046f06825cf6</string>
			<key>location</key>
			<dict>
				<key>col</key>
				<integer>1</integer>
				<key>file</key>
				<integer>0</integer>
				<key>line</key>
				<integer>421</integer>
			</dict>
			<key>macro_expansions</key>
			<array>
				<dict>
					<key>expansion</key>
					<string>do {static_assert (mozilla ::detail ::AssertionConditionType &lt;decltype (IntType (a ))&gt;::isValid ,"invalid assertion condition");if ((__builtin_expect (!!(!(!!(IntType (a )))),0))){do {}while (false );do {}while (false );do {*((volatile int *)__null )=441;::abort ();}while (false );}}while (false )</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>3</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>441</integer>
					</dict>
					<key>name</key>
					<string>MOZ_RELEASE_ASSERT(IntType(a))</string>
				</dict>
				<dict>
					<key>expansion</key>
					<string>do {static_assert (mozilla ::detail ::AssertionConditionType &lt;decltype (IntType (b ))&gt;::isValid ,"invalid assertion condition");if ((__builtin_expect (!!(!(!!(IntType (b )))),0))){do {}while (false );do {}while (false );do {*((volatile int *)__null )=442;::abort ();}while (false );}}while (false )</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>3</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>442</integer>
					</dict>
					<key>name</key>
					<string>MOZ_RELEASE_ASSERT(IntType(b))</string>
				</dict>
				<dict>
					<key>expansion</key>
					<string>do {static_assert (mozilla ::detail ::AssertionConditionType &lt;decltype (a |EnumType ::B )&gt;::isValid ,"invalid assertion condition");if ((__builtin_expect (!!(!(!!(a |EnumType ::B ))),0))){do {}while (false );do {}while (false );do {*((volatile int *)__null )=443;::abort ();}while (false );}}while (false )</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>3</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>443</integer>
					</dict>
					<key>name</key>
					<string>MOZ_RELEASE_ASSERT(a | EnumType::B)</string>
				</dict>
				<dict>
					<key>expansion</key>
					<string>do {static_assert (mozilla ::detail ::AssertionConditionType &lt;decltype (a |b )&gt;::isValid ,"invalid assertion condition");if ((__builtin_expect (!!(!(!!(a |b ))),0))){do {}while (false );do {}while (false );do {*((volatile int *)__null )=444;::abort ();}while (false );}}while (false )</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>3</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>444</integer>
					</dict>
					<key>name</key>
					<string>MOZ_RELEASE_ASSERT(a | b)</string>
				</dict>
				<dict>
					<key>expansion</key>
					<string>do {static_assert (mozilla ::detail ::AssertionConditionType &lt;decltype (EnumType ::A |EnumType ::B )&gt;::isValid ,"invalid assertion condition");if ((__builtin_expect (!!(!(!!(EnumType ::A |EnumType ::B ))),0))){do {}while (false );do {}while (false );do {*((volatile int *)__null )=445;::abort ();}while (false );}}while (false )</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>3</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>445</integer>
					</dict>
					<key>name</key>
					<string>MOZ_RELEASE_ASSERT(EnumType::A | EnumType::B)</string>
				</dict>
				<dict>
					<key>expansion</key>
					<string>do {static_assert (mozilla ::detail ::AssertionConditionType &lt;decltype (IntType (c ))&gt;::isValid ,"invalid assertion condition");if ((__builtin_expect (!!(!(!!(IntType (c )))),0))){do {}while (false );do {}while (false );do {*((volatile int *)__null )=447;::abort ();}while (false );}}while (false )</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>3</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>447</integer>
					</dict>
					<key>name</key>
					<string>MOZ_RELEASE_ASSERT(IntType(c))</string>
				</dict>
				<dict>
					<key>expansion</key>
					<string>do {static_assert (mozilla ::detail ::AssertionConditionType &lt;decltype (c &amp;c )&gt;::isValid ,"invalid assertion condition");if ((__builtin_expect (!!(!(!!(c &amp;c ))),0))){do {}while (false );do {}while (false );do {*((volatile int *)__null )=448;::abort ();}while (false );}}while (false )</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>3</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>448</integer>
					</dict>
					<key>name</key>
					<string>MOZ_RELEASE_ASSERT(c &amp; c)</string>
				</dict>
				<dict>
					<key>expansion</key>
					<string>inline constexpr mozilla ::CastableTypedEnumResult &lt;Uint32EnumWithHighBits &gt;operator |(Uint32EnumWithHighBits a ,Uint32EnumWithHighBits b ){typedef mozilla ::CastableTypedEnumResult &lt;Uint32EnumWithHighBits &gt;Result ;typedef mozilla ::detail ::UnsignedIntegerTypeForEnum &lt;Uint32EnumWithHighBits &gt;::Type U ;return Result (Uint32EnumWithHighBits (U (a )|U (b )));}inline Uint32EnumWithHighBits &amp;operator |=(Uint32EnumWithHighBits &amp;a ,Uint32EnumWithHighBits b ){return a =a |b ;}inline constexpr mozilla ::CastableTypedEnumResult &lt;Uint32EnumWithHighBits &gt;operator &amp;(Uint32EnumWithHighBits a ,Uint32EnumWithHighBits b ){typedef mozilla ::CastableTypedEnumResult &lt;Uint32EnumWithHighBits &gt;Result ;typedef mozilla ::detail ::UnsignedIntegerTypeForEnum &lt;Uint32EnumWithHighBits &gt;::Type U ;return Result (Uint32EnumWithHighBits (U (a )&amp;U (b )));}inline Uint32EnumWithHighBits &amp;operator &amp;=(Uint32EnumWithHighBits &amp;a ,Uint32EnumWithHighBits b ){return a =a &amp;b ;}inline constexpr mozilla ::CastableTypedEnumResult &lt;Uint32EnumWithHighBits &gt;operator ^(Uint32EnumWithHighBits a ,Uint32EnumWithHighBits b ){typedef mozilla ::CastableTypedEnumResult &lt;Uint32EnumWithHighBits &gt;Result ;typedef mozilla ::detail ::UnsignedIntegerTypeForEnum &lt;Uint32EnumWithHighBits &gt;::Type U ;return Result (Uint32EnumWithHighBits (U (a )^U (b )));}inline Uint32EnumWithHighBits &amp;operator ^=(Uint32EnumWithHighBits &amp;a ,Uint32EnumWithHighBits b ){return a =a ^b ;}inline constexpr mozilla ::CastableTypedEnumResult &lt;Uint32EnumWithHighBits &gt;operator ~(Uint32EnumWithHighBits a ){typedef mozilla ::CastableTypedEnumResult &lt;Uint32EnumWithHighBits &gt;Result ;typedef mozilla ::detail ::UnsignedIntegerTypeForEnum &lt;Uint32EnumWithHighBits &gt;::Type U ;return Result (Uint32EnumWithHighBits (~(U (a ))));}</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>1</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>421</integer>
					</dict>
					<key>name</key>
					<string>MOZ_MAKE_ENUM_CLASS_BITWISE_OPERATORS(Uint32EnumWithHighBits)</string>
				</dict>
			</array>
			<key>path</key>
			<array>
				<dict>
					<key>edges</key>
					<array>
						<dict>
							<key>end</key>
							<array>
								<dict>
									<key>col</key>
									<integer>3</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>440</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>10</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>440</integer>
								</dict>
							</array>
							<key>start</key>
							<array>
								<dict>
									<key>col</key>
									<integer>3</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>439</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>10</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>439</integer>
								</dict>
							</array>
						</dict>
					</array>
					<key>kind</key>
					<string>control</string>
				</dict>
				<dict>
					<key>edges</key>
					<array>
						<dict>
							<key>end</key>
							<array>
								<dict>
									<key>col</key>
									<integer>3</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>441</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>20</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>441</integer>
								</dict>
							</array>
							<key>start</key>
							<array>
								<dict>
									<key>col</key>
									<integer>3</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>440</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>10</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>440</integer>
								</dict>
							</array>
						</dict>
					</array>
					<key>kind</key>
					<string>control</string>
				</dict>
				<dict>
					<key>edges</key>
					<array>
						<dict>
							<key>end</key>
							<array>
								<dict>
									<key>col</key>
									<integer>3</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>446</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>10</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>446</integer>
								</dict>
							</array>
							<key>start</key>
							<array>
								<dict>
									<key>col</key>
									<integer>3</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>441</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>20</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>441</integer>
								</dict>
							</array>
						</dict>
					</array>
					<key>kind</key>
					<string>control</string>
				</dict>
				<dict>
					<key>edges</key>
					<array>
						<dict>
							<key>end</key>
							<array>
								<dict>
									<key>col</key>
									<integer>3</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>447</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>20</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>447</integer>
								</dict>
							</array>
							<key>start</key>
							<array>
								<dict>
									<key>col</key>
									<integer>3</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>446</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>10</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>446</integer>
								</dict>
							</array>
						</dict>
					</array>
					<key>kind</key>
					<string>control</string>
				</dict>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>3</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>448</integer>
					</dict>
					<key>message</key>
					<string>Calling 'operator&amp;'</string>
					<key>ranges</key>
					<array>
						<array>
							<dict>
								<key>col</key>
								<integer>3</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>448</integer>
							</dict>
							<dict>
								<key>col</key>
								<integer>27</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>448</integer>
							</dict>
						</array>
					</array>
				</dict>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>1</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>421</integer>
					</dict>
					<key>message</key>
					<string>Entered call from 'TestIsNotTruncated&lt;Uint32EnumWithHighBits, unsigned int&gt;'</string>
					<key>ranges</key>
					<array>
						<array>
							<dict>
								<key>col</key>
								<integer>1</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>421</integer>
							</dict>
							<dict>
								<key>col</key>
								<integer>1</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>421</integer>
							</dict>
						</array>
					</array>
				</dict>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>1</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>421</integer>
					</dict>
					<key>message</key>
					<string>The value provided to the cast expression is not in the valid range of values for the enum</string>
					<key>ranges</key>
					<array>
						<array>
							<dict>
								<key>col</key>
								<integer>1</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>421</integer>
							</dict>
							<dict>
								<key>col</key>
								<integer>61</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>421</integer>
							</dict>
						</array>
					</array>
				</dict>
			</array>
		</dict>
	</array>
	<key>files</key>
	<array>
		<string>./testdata/has_assertion.cpp</string>
	</array>
	<key>metadata</key>
	<dict>
		<key>analyzer</key>
		<dict>
			<key>name</key>
			<string>clangsa</string>
		</dict>
		<key>generated_by</key>
		<dict>
			<key>name</key>
			<string>CodeChecker</string>
			<key>version</key>
			<string>6.20.0</string>
		</dict>
	</dict>
</dict>
</plist>
